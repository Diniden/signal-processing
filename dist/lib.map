{"version":3,"sources":["FIR.ts","pascal-triangle.ts","gaussian-blur.ts","../node_modules/d3-array/src/ascending.js","../node_modules/d3-array/src/bisector.js","../node_modules/d3-array/src/bisect.js","../node_modules/d3-array/src/count.js","../node_modules/d3-array/src/cross.js","../node_modules/d3-array/src/descending.js","../node_modules/d3-array/src/variance.js","../node_modules/d3-array/src/deviation.js","../node_modules/d3-array/src/extent.js","../node_modules/d3-array/src/identity.js","../node_modules/d3-array/src/group.js","../node_modules/d3-array/src/array.js","../node_modules/d3-array/src/constant.js","../node_modules/d3-array/src/range.js","../node_modules/d3-array/src/ticks.js","../node_modules/d3-array/src/threshold/sturges.js","../node_modules/d3-array/src/bin.js","../node_modules/d3-array/src/number.js","../node_modules/d3-array/src/quantile.js","../node_modules/d3-array/src/threshold/freedmanDiaconis.js","../node_modules/d3-array/src/threshold/scott.js","../node_modules/d3-array/src/max.js","../node_modules/d3-array/src/maxIndex.js","../node_modules/d3-array/src/mean.js","../node_modules/d3-array/src/quickselect.js","../node_modules/d3-array/src/median.js","../node_modules/d3-array/src/merge.js","../node_modules/d3-array/src/min.js","../node_modules/d3-array/src/minIndex.js","../node_modules/d3-array/src/pairs.js","../node_modules/d3-array/src/permute.js","../node_modules/d3-array/src/least.js","../node_modules/d3-array/src/leastIndex.js","../node_modules/d3-array/src/scan.js","../node_modules/d3-array/src/shuffle.js","../node_modules/d3-array/src/sum.js","../node_modules/d3-array/src/transpose.js","../node_modules/d3-array/src/zip.js","../node_modules/d3-array/src/index.js","../node_modules/d3-scale/src/init.js","../node_modules/d3-scale/src/ordinal.js","../node_modules/d3-scale/src/band.js","../node_modules/d3-color/src/define.js","../node_modules/d3-color/src/color.js","../node_modules/d3-color/src/math.js","../node_modules/d3-color/src/lab.js","../node_modules/d3-color/src/cubehelix.js","../node_modules/d3-color/src/index.js","../node_modules/d3-interpolate/src/basis.js","../node_modules/d3-interpolate/src/basisClosed.js","../node_modules/d3-interpolate/src/constant.js","../node_modules/d3-interpolate/src/color.js","../node_modules/d3-interpolate/src/rgb.js","../node_modules/d3-interpolate/src/array.js","../node_modules/d3-interpolate/src/date.js","../node_modules/d3-interpolate/src/number.js","../node_modules/d3-interpolate/src/object.js","../node_modules/d3-interpolate/src/string.js","../node_modules/d3-interpolate/src/value.js","../node_modules/d3-interpolate/src/discrete.js","../node_modules/d3-interpolate/src/hue.js","../node_modules/d3-interpolate/src/round.js","../node_modules/d3-interpolate/src/transform/decompose.js","../node_modules/d3-interpolate/src/transform/parse.js","../node_modules/d3-interpolate/src/transform/index.js","../node_modules/d3-interpolate/src/zoom.js","../node_modules/d3-interpolate/src/hsl.js","../node_modules/d3-interpolate/src/lab.js","../node_modules/d3-interpolate/src/hcl.js","../node_modules/d3-interpolate/src/cubehelix.js","../node_modules/d3-interpolate/src/piecewise.js","../node_modules/d3-interpolate/src/quantize.js","../node_modules/d3-interpolate/src/index.js","../node_modules/d3-scale/src/constant.js","../node_modules/d3-scale/src/number.js","../node_modules/d3-scale/src/continuous.js","../node_modules/d3-format/src/formatDecimal.js","../node_modules/d3-format/src/exponent.js","../node_modules/d3-format/src/formatGroup.js","../node_modules/d3-format/src/formatNumerals.js","../node_modules/d3-format/src/formatSpecifier.js","../node_modules/d3-format/src/formatTrim.js","../node_modules/d3-format/src/formatPrefixAuto.js","../node_modules/d3-format/src/formatRounded.js","../node_modules/d3-format/src/formatTypes.js","../node_modules/d3-format/src/identity.js","../node_modules/d3-format/src/locale.js","../node_modules/d3-format/src/defaultLocale.js","../node_modules/d3-format/src/precisionFixed.js","../node_modules/d3-format/src/precisionPrefix.js","../node_modules/d3-format/src/precisionRound.js","../node_modules/d3-format/src/index.js","../node_modules/d3-scale/src/tickFormat.js","../node_modules/d3-scale/src/linear.js","../node_modules/d3-scale/src/identity.js","../node_modules/d3-scale/src/nice.js","../node_modules/d3-scale/src/log.js","../node_modules/d3-scale/src/symlog.js","../node_modules/d3-scale/src/pow.js","../node_modules/d3-scale/src/quantile.js","../node_modules/d3-scale/src/quantize.js","../node_modules/d3-scale/src/threshold.js","../node_modules/d3-time/src/interval.js","../node_modules/d3-time/src/millisecond.js","../node_modules/d3-time/src/duration.js","../node_modules/d3-time/src/second.js","../node_modules/d3-time/src/minute.js","../node_modules/d3-time/src/hour.js","../node_modules/d3-time/src/day.js","../node_modules/d3-time/src/week.js","../node_modules/d3-time/src/month.js","../node_modules/d3-time/src/year.js","../node_modules/d3-time/src/utcMinute.js","../node_modules/d3-time/src/utcHour.js","../node_modules/d3-time/src/utcDay.js","../node_modules/d3-time/src/utcWeek.js","../node_modules/d3-time/src/utcMonth.js","../node_modules/d3-time/src/utcYear.js","../node_modules/d3-time/src/index.js","../node_modules/d3-time-format/src/locale.js","../node_modules/d3-time-format/src/defaultLocale.js","../node_modules/d3-time-format/src/isoFormat.js","../node_modules/d3-time-format/src/isoParse.js","../node_modules/d3-time-format/src/index.js","../node_modules/d3-scale/src/time.js","../node_modules/d3-scale/src/utcTime.js","../node_modules/d3-scale/src/sequential.js","../node_modules/d3-scale/src/sequentialQuantile.js","../node_modules/d3-scale/src/diverging.js","../node_modules/d3-scale/src/index.js","perlin-noise.ts","index.ts"],"names":["a","b","NaN","compare","length","ascendingComparator","left","x","lo","hi","mid","right","f","d","bisectRight","ascendingBisect","ascending","bisectLeft","count","values","valueof","undefined","value","index","array","empty","arrayify","Array","from","reducer","reduce","cross","pop","lengths","map","j","fill","product","some","push","i","variance","delta","mean","sum","deviation","v","Math","sqrt","min","max","group","keys","nest","identity","groups","rollup","rollups","regroup","Map","keyof","key","get","set","prototype","slice","start","stop","step","n","arguments","ceil","range","e10","e5","e2","reverse","ticks","tickIncrement","isFinite","floor","power","log","LN10","error","pow","tickStep","step0","abs","step1","LN2","domain","extent","threshold","sturges","histogram","data","isArray","xz","x0","x1","tz","m","shift","bins","bin","_","thresholds","call","quantile","p","number","i0","value0","sort","maxIndex","quickselect","k","z","s","exp","sd","t","swap","numbers","Float64Array","flatten","arrays","merge","minIndex","pairs","pairof","pair","previous","first","source","least","defined","minValue","element","leastIndex","scan","shuffle","i1","random","matrix","transpose","row","initRange","initInterpolator","interpolator","implicit","Symbol","ordinal","unknown","scale","has","copy","apply","band","bandwidth","ordinalRange","r0","r1","round","paddingInner","paddingOuter","align","rescale","rangeRound","padding","pointish","point","constructor","factory","extend","parent","definition","Object","create","Color","darker","brighter","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","format","trim","toLowerCase","exec","Rgb","parseInt","rgbn","rgba","hsla","hasOwnProperty","r","g","rgbConvert","o","rgb","opacity","hex","toString","h","l","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","displayable","isNaN","deg2rad","PI","rad2deg","K","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","hcl2lab","rgb2lrgb","y","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","c","atan2","lch","hcl","cos","sin","A","B","C","D","E","ED","EB","BC_DA","cubehelixConvert","Cubehelix","bl","cubehelix","cosh","sinh","basis","v0","v1","v2","v3","linear","exponential","hue","gamma","nogamma","rgbGamma","end","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","basisClosed","nb","na","Date","setTime","reA","reB","zero","one","bi","am","bm","bs","lastIndex","q","join","string","date","valueOf","object","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","e","atan","cssNode","cssRoot","cssView","svgNode","parseCss","document","createElement","documentElement","defaultView","style","transform","getComputedStyle","appendChild","getPropertyValue","removeChild","split","parseSvg","createElementNS","setAttribute","baseVal","consolidate","interpolateTransform","parse","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","tanh","p0","p1","ux0","S","uy0","w0","ux1","uy1","w1","dx","dy","d2","d1","b0","b1","coshr0","u","duration","hslLong","hclLong","cubehelixGamma","cubehelixLong","piecewise","interpolate","I","samples","unit","normalize","clamper","bimap","d0","polymap","target","clamp","transformer","untransform","output","input","interpolateValue","invert","interpolateNumber","interpolateRound","continuous","toExponential","indexOf","coefficient","grouping","thousands","width","substring","numerals","replace","re","formatSpecifier","specifier","FormatSpecifier","match","Error","sign","symbol","comma","precision","type","out","prefixExponent","exponent","toFixed","toPrecision","formatRounded","formatPrefixAuto","X","toUpperCase","prefixes","locale","currency","decimal","percent","newFormat","formatTypes","prefix","test","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","formatPrefix","defaultLocale","linearish","tickFormat","nice","interval","transformLog","transformExp","transformLogn","transformExpn","pow10","powp","base","logp","log10","log2","reflect","loggish","logs","pows","transformSymlog","log1p","transformSymexp","expm1","symlogish","constant","symlog","transformPow","transformSqrt","transformSquare","powish","invertExtent","quantiles","quantize","newInterval","floori","offseti","field","offset","filter","every","millisecond","milliseconds","durationSecond","durationMinute","durationHour","durationDay","durationWeek","second","getMilliseconds","getUTCSeconds","seconds","minute","getSeconds","getMinutes","minutes","hour","getHours","hours","day","setHours","setDate","getDate","getTimezoneOffset","days","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","getMonth","getFullYear","months","year","setFullYear","years","utcMinute","setUTCSeconds","getUTCMinutes","utcMinutes","utcHour","setUTCMinutes","getUTCHours","utcHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcDays","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcMonths","utcYear","setUTCFullYear","utcYears","localDate","H","M","L","utcDate","UTC","newYear","formatLocale","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","locale_shortWeekdays","shortDays","locale_months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatPeriod","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","w","formatWeekdayNumberSunday","W","formatWeekNumberMonday","formatYear","Y","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCPeriod","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parsePeriod","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseLocaleDate","parseLocaleTime","parseYear","parseFullYear","parseZone","parseLiteralPercent","pad","pads","charAt","newParse","newDate","week","timeMonday","timeDay","utcFormat","utcParse","numberRe","percentRe","requoteRe","requote","names","timeSunday","timeThursday","getUTCMilliseconds","dow","timeFormat","timeParse","formatIso","isoSpecifier","formatIsoNative","toISOString","parseIso","parseIsoNative","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","timeYear","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","utcWeek","utcSecond","utcMillisecond","k10","sequential","sequentialLog","sequentialSymlog","sequentialPow","sequentialSqrt","sequentialQuantile","k21","x2","diverging","divergingLog","divergingSymlog","divergingPow","divergingSqrt"],"mappings":"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","file":"lib.map","sourceRoot":"../src","sourcesContent":["import { Vec2 } from './types';\n\n/**\n * Performs a frequency filtration across a provided streamed in signal.\n * This filter can be adjusted via the seed values provided.\n */\nexport class FIRFilter {\n  coefficients: number[];\n  filter: number[];\n\n  /**\n   * The seed values work in tuples [FIR filter coefficient, starting bias];\n   * When normalize is activated, the seed values are normalized to the provided value.\n   * When normalize is a value of 1, this behaves like a low pass FIR filter.\n   */\n  constructor(seedValues: Vec2[], normalize?: number) {\n    this.coefficients = seedValues.map(seed => seed[0]);\n    this.filter = seedValues.map(seed => seed[1]);\n\n    if (normalize !== undefined) {\n      let total = 0;\n      this.coefficients.forEach(c => (total += c));\n      this.coefficients = this.coefficients.map(\n        value => (value / total) * normalize\n      );\n    }\n  }\n\n  /**\n   * Reset the filter to have all of it's filter values set to the provided value\n   */\n  reset(value: number) {\n    this.filter = this.filter.map(() => value);\n  }\n\n  /**\n   * This streams in a value into the filter and outputs the next computed value\n   */\n  stream(value: number) {\n    let out = 0;\n    this.filter.pop();\n    this.filter.unshift(value);\n\n    for (let i = 0, end = this.coefficients.length; i < end; ++i) {\n      out += this.coefficients[i] * this.filter[i];\n    }\n\n    this.filter.shift();\n    this.filter.unshift(out);\n\n    return out;\n  }\n\n  /**\n   * Runs a list of values through the filter and returns an array of each step\n   */\n  run(start: number, values: number[]) {\n    const current = this.filter.slice(0);\n    const toProcess = values.slice(0);\n    this.reset(start);\n    const out: number[] = [];\n\n    while (toProcess.length > 0) {\n      out.push(this.stream(toProcess.shift() || 0));\n    }\n\n    // Reset the filter back to where it was\n    this.filter = current;\n\n    return out;\n  }\n}\n","export class PascalTriangle {\n  /** Contains the triangles elements [[1], [1, 1], [1, 2, 1], etc] */\n  elements: number[][];\n\n  constructor(levels: number) {\n    if (levels === 0) return;\n    const elements: number[][] = [[1]];\n    const _levels = levels - 1;\n\n    // i will be the index pointing to the previous row\n    for (let i = 0; i < _levels; ++i) {\n      const previous = elements[i];\n      const row = [1];\n\n      for (let k = 0, endk = previous.length - 1; k < endk; ++k) {\n        row.push(previous[k] + previous[k + 1]);\n      }\n\n      row.push(1);\n      elements.push(row);\n    }\n\n    this.elements = elements;\n  }\n\n  /**\n   * Tries to generate a gaussian kernal based on the pascal triangle where the kernal has so many elements\n   * To get a higher quality kernal trim off the ends of the triangle's row but keep the kernal number.\n   * This causes a deeper triangle to be calculated.\n   */\n  gaussianKernal(size: number, trim: number) {\n    const toTrim = trim * 2;\n    let row: number[] = [];\n\n    // Loop until we hit a row with enough elements to make the kernal\n    for (\n      let i = 0, end = this.elements.length;\n      i < end && this.elements[i].length - toTrim <= size;\n      ++i\n    ) {\n      row = this.elements[i];\n    }\n\n    // Make sure the elements matches the requested elements size exactly\n    if (row.length - toTrim !== size) {\n      console.warn(\n        'Error in pascal triangle gaussian kernal',\n        'Requested size',\n        size,\n        'Row',\n        row,\n        'Trim amount',\n        trim,\n        'Elements',\n        this.elements\n      );\n    }\n\n    // Copy and remove trimed elements\n    let kernal = row.slice(trim, row.length - trim);\n    // Get the new total of the row\n    const total = kernal.reduce((prev, next) => next + prev, 0);\n    // Normalize the kernal\n    kernal = kernal.map(value => value / total);\n\n    return {\n      kernal,\n      total,\n    };\n  }\n}\n","import { PascalTriangle } from './pascal-triangle';\n\nexport interface IGaussianBlurOptions {\n  /** Number of samples taken per data slot */\n  kernalSize: number;\n  /** Number of times the blur is applied */\n  passes: number;\n}\n\nconst { min, max } = Math;\n\nfunction clamp(val: number, minVal: number, maxVal: number) {\n  return max(min(val, maxVal), minVal);\n}\n\n/**\n * Performs a gaussian blur on a set of numerical data.\n */\nexport class GaussianBlur {\n  // This is a blur kernal used for blending\n  private kernal: number[];\n  // These are the options for the blur operation\n  options: IGaussianBlurOptions;\n\n  constructor(options: IGaussianBlurOptions) {\n    this.options = options;\n    this.update(options);\n  }\n\n  /**\n   * Applies the blur to the input data, returns a blurred version without affecting the source.\n   */\n  generate(\n    data: number[][],\n    offsetLeft: number = 0,\n    offsetTop: number = 0,\n    offsetRight: number = 0,\n    offsetBottom: number = 0\n  ) {\n    if (!data || !data[0] || !data[0].length) return data;\n\n    const { passes } = this.options;\n    const kernal = this.kernal;\n    const outPass = data.map(col => col.slice(0));\n    const width = data.length;\n    const height = data[0].length;\n\n    const offsets: { [key: number]: number[] } = {\n      1: [0],\n      3: [-1, 0, 1],\n      5: [-2, -1, 0, 1, 2],\n      7: [-3, -2, -1, 0, 1, 2, 3],\n      9: [-4, -3, -2, -1, 0, 1, 2, 3, 4],\n    };\n    const offset = offsets[kernal.length];\n\n    if (!offset) {\n      console.warn('No offset suitable for kernal size');\n      return data;\n    }\n\n    // Instantiate our vertical pass so we don't recreate every pass\n    const verticalPass: number[][] = [];\n    for (let x = 0; x < width; ++x) {\n      verticalPass.push([]);\n    }\n\n    for (let blurCount = 0; blurCount < passes; ++blurCount) {\n      // After the octaves have been loaded in, we can blur filter the result\n      let value;\n      let sample;\n\n      // Vertical Gaussian blur pass\n      for (let x = offsetLeft, endx = width - offsetRight; x < endx; ++x) {\n        const outCol = verticalPass[x];\n        const inCol = outPass[x];\n\n        for (let y = offsetTop, endy = height - offsetBottom; y < endy; ++y) {\n          value = 0;\n\n          for (let k = 0, endk = kernal.length; k < endk; ++k) {\n            sample = clamp(y + offset[k], 0, endy - 1);\n            value += (inCol[sample] || 0) * kernal[k];\n          }\n\n          outCol[y] = value;\n        }\n      }\n\n      // Horizontal Gaussian blur into our perlin data\n      for (let x = offsetLeft, endx = width - offsetRight; x < endx; ++x) {\n        const outCol = outPass[x];\n\n        for (let y = offsetTop, endy = height - offsetBottom; y < endy; ++y) {\n          value = 0;\n\n          for (let k = 0, endk = kernal.length; k < endk; ++k) {\n            sample = clamp(x + offset[k], 0, endx - 1);\n            value += ((verticalPass[sample] || [])[y] || 0) * kernal[k];\n          }\n\n          outCol[y] = value;\n        }\n      }\n    }\n\n    return outPass;\n  }\n\n  update(options: Partial<IGaussianBlurOptions>) {\n    Object.assign(this.options, options);\n\n    if (options.kernalSize) {\n      // This is a blur kernal that will be used for sampling the zoomed in octaves\n      this.kernal = new PascalTriangle(15).gaussianKernal(\n        options.kernalSize,\n        2\n      ).kernal;\n    }\n  }\n}\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from './ascending.js';\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = (lo + hi) >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = (lo + hi) >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    },\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from './ascending.js';\nimport bisector from './bisector.js';\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function count(values, valueof) {\n  let count = 0;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null && value >= value) {\n        ++count;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && value >= value) {\n        ++count;\n      }\n    }\n  }\n  return count;\n}\n","function length(array) {\n  return array.length | 0;\n}\n\nfunction empty(length) {\n  return !(length > 0);\n}\n\nfunction arrayify(values) {\n  return typeof values !== 'object' || 'length' in values\n    ? values\n    : Array.from(values);\n}\n\nfunction reducer(reduce) {\n  return values => reduce(...values);\n}\n\nexport default function cross(...values) {\n  const reduce =\n    typeof values[values.length - 1] === 'function' && reducer(values.pop());\n  values = values.map(arrayify);\n  const lengths = values.map(length);\n  const j = values.length - 1;\n  const index = new Array(j + 1).fill(0);\n  const product = [];\n  if (j < 0 || lengths.some(empty)) return product;\n  while (true) {\n    product.push(index.map((j, i) => values[i][j]));\n    let i = j;\n    while (++index[i] === lengths[i]) {\n      if (i === 0) return reduce ? product.map(reduce) : product;\n      index[i--] = 0;\n    }\n  }\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function variance(values, valueof) {\n  let count = 0;\n  let delta;\n  let mean = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (\n        (value = valueof(value, ++index, values)) != null &&\n        (value = +value) >= value\n      ) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n  if (count > 1) return sum / (count - 1);\n}\n","import variance from './variance.js';\n\nexport default function deviation(values, valueof) {\n  const v = variance(values, valueof);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n","export default function(x) {\n  return x;\n}\n","import identity from './identity.js';\n\nexport default function group(values, ...keys) {\n  return nest(values, identity, identity, keys);\n}\n\nexport function groups(values, ...keys) {\n  return nest(values, Array.from, identity, keys);\n}\n\nexport function rollup(values, reduce, ...keys) {\n  return nest(values, identity, reduce, keys);\n}\n\nexport function rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\n\nfunction nest(values, map, reduce, keys) {\n  return (function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new Map();\n    const keyof = keys[i++];\n    let index = -1;\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);\n      else groups.set(key, [value]);\n    }\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n    return map(groups);\n  })(values, 0);\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(start, stop, step) {\n  (start = +start),\n    (stop = +stop),\n    (step =\n      (n = arguments.length) < 2\n        ? ((stop = start), (start = 0), 1)\n        : n < 3\n        ? 1\n        : +step);\n\n  var i = -1,\n    n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n    range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n  e5 = Math.sqrt(10),\n  e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n    i = -1,\n    n,\n    ticks,\n    step;\n\n  (stop = +stop), (start = +start), (count = +count);\n  if (start === stop && count > 0) return [start];\n  if ((reverse = stop < start)) (n = start), (start = stop), (stop = n);\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step))\n    return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array((n = Math.ceil(stop - start + 1)));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array((n = Math.ceil(start - stop + 1)));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n    power = Math.floor(Math.log(step) / Math.LN10),\n    error = step / Math.pow(10, power);\n  return power >= 0\n    ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) *\n        Math.pow(10, power)\n    : -Math.pow(10, -power) /\n        (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n    step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n    error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import { slice } from './array.js';\nimport bisect from './bisect.js';\nimport constant from './constant.js';\nimport extent from './extent.js';\nimport identity from './identity.js';\nimport range from './range.js';\nimport { tickStep } from './ticks.js';\nimport sturges from './threshold/sturges.js';\n\nexport default function() {\n  var value = identity,\n    domain = extent,\n    threshold = sturges;\n\n  function histogram(data) {\n    if (!Array.isArray(data)) data = Array.from(data);\n\n    var i,\n      n = data.length,\n      x,\n      values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n      x0 = xz[0],\n      x1 = xz[1],\n      tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n      bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length\n      ? ((value = typeof _ === 'function' ? _ : constant(_)), histogram)\n      : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length\n      ? ((domain = typeof _ === 'function' ? _ : constant([_[0], _[1]])),\n        histogram)\n      : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length\n      ? ((threshold =\n          typeof _ === 'function'\n            ? _\n            : Array.isArray(_)\n            ? constant(slice.call(_))\n            : constant(_)),\n        histogram)\n      : threshold;\n  };\n\n  return histogram;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","import number from './number.js';\n\nexport default function quantile(values, p, valueof = number) {\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n    i = (n - 1) * p,\n    i0 = Math.floor(i),\n    value0 = +valueof(values[i0], i0, values),\n    value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import { map } from '../array.js';\nimport ascending from '../ascending.js';\nimport number from '../number.js';\nimport quantile from '../quantile.js';\n\nexport default function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil(\n    (max - min) /\n      (2 *\n        (quantile(values, 0.75) - quantile(values, 0.25)) *\n        Math.pow(values.length, -1 / 3))\n  );\n}\n","import deviation from '../deviation.js';\n\nexport default function(values, min, max) {\n  return Math.ceil(\n    (max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3))\n  );\n}\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (\n        value != null &&\n        (max < value || (max === undefined && value >= value))\n      ) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (\n        (value = valueof(value, ++index, values)) != null &&\n        (max < value || (max === undefined && value >= value))\n      ) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","export default function maxIndex(values, valueof) {\n  let max;\n  let maxIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (\n        value != null &&\n        (max < value || (max === undefined && value >= value))\n      ) {\n        (max = value), (maxIndex = index);\n      }\n    }\n  } else {\n    for (let value of values) {\n      if (\n        (value = valueof(value, ++index, values)) != null &&\n        (max < value || (max === undefined && value >= value))\n      ) {\n        (max = value), (maxIndex = index);\n      }\n    }\n  }\n  return maxIndex;\n}\n","export default function mean(values, valueof) {\n  let count = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count, (sum += value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (\n        (value = valueof(value, ++index, values)) != null &&\n        (value = +value) >= value\n      ) {\n        ++count, (sum += value);\n      }\n    }\n  }\n  if (count) return sum / count;\n}\n","import ascending from './ascending.js';\n\n// Based on https://github.com/mourner/quickselect\n// ISC license, Copyright 2018 Vladimir Agafonkin.\nexport default function quickselect(\n  array,\n  k,\n  left = 0,\n  right = array.length - 1,\n  compare = ascending\n) {\n  while (right > left) {\n    if (right - left > 600) {\n      const n = right - left + 1;\n      const m = k - left + 1;\n      const z = Math.log(n);\n      const s = 0.5 * Math.exp((2 * z) / 3);\n      const sd =\n        0.5 * Math.sqrt((z * s * (n - s)) / n) * (m - n / 2 < 0 ? -1 : 1);\n      const newLeft = Math.max(left, Math.floor(k - (m * s) / n + sd));\n      const newRight = Math.min(right, Math.floor(k + ((n - m) * s) / n + sd));\n      quickselect(array, k, newLeft, newRight, compare);\n    }\n\n    const t = array[k];\n    let i = left;\n    let j = right;\n\n    swap(array, left, k);\n    if (compare(array[right], t) > 0) swap(array, left, right);\n\n    while (i < j) {\n      swap(array, i, j), ++i, --j;\n      while (compare(array[i], t) < 0) ++i;\n      while (compare(array[j], t) > 0) --j;\n    }\n\n    if (compare(array[left], t) === 0) swap(array, left, j);\n    else ++j, swap(array, j, right);\n\n    if (j <= k) left = j + 1;\n    if (k <= j) right = j - 1;\n  }\n  return array;\n}\n\nfunction swap(array, i, j) {\n  const t = array[i];\n  array[i] = array[j];\n  array[j] = t;\n}\n","import quantile from './quantile.js';\nimport quickselect from './quickselect.js';\n\nfunction* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (\n        (value = valueof(value, ++index, values)) != null &&\n        (value = +value) >= value\n      ) {\n        yield value;\n      }\n    }\n  }\n}\n\nexport default function(values, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!values.length) return;\n  const n = values.length;\n  const i = n >> 1;\n  quickselect(values, i - 1, 0);\n  if ((n & 1) === 0) quickselect(values, i, i);\n  return quantile(values, 0.5);\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (\n        value != null &&\n        (min > value || (min === undefined && value >= value))\n      ) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (\n        (value = valueof(value, ++index, values)) != null &&\n        (min > value || (min === undefined && value >= value))\n      ) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","export default function minIndex(values, valueof) {\n  let min;\n  let minIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (\n        value != null &&\n        (min > value || (min === undefined && value >= value))\n      ) {\n        (min = value), (minIndex = index);\n      }\n    }\n  } else {\n    for (let value of values) {\n      if (\n        (value = valueof(value, ++index, values)) != null &&\n        (min > value || (min === undefined && value >= value))\n      ) {\n        (min = value), (minIndex = index);\n      }\n    }\n  }\n  return minIndex;\n}\n","export default function pairs(values, pairof = pair) {\n  const pairs = [];\n  let previous;\n  let first = false;\n  for (const value of values) {\n    if (first) pairs.push(pairof(previous, value));\n    previous = value;\n    first = true;\n  }\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","export default function(source, keys) {\n  return Array.from(keys, key => source[key]);\n}\n","import ascending from './ascending.js';\n\nexport default function least(values, compare = ascending) {\n  let min;\n  let defined = false;\n  if (compare.length === 1) {\n    let minValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (\n        defined ? ascending(value, minValue) < 0 : ascending(value, value) === 0\n      ) {\n        min = element;\n        minValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined ? compare(value, min) < 0 : compare(value, value) === 0) {\n        min = value;\n        defined = true;\n      }\n    }\n  }\n  return min;\n}\n","import ascending from './ascending.js';\n\nexport default function leastIndex(values, compare = ascending) {\n  let min;\n  let minIndex = -1;\n  let index = -1;\n  if (compare.length === 1) {\n    for (const element of values) {\n      ++index;\n      const value = compare(element);\n      if (\n        minIndex < 0 ? ascending(value, value) === 0 : ascending(value, min) < 0\n      ) {\n        min = value;\n        minIndex = index;\n      }\n    }\n  } else {\n    for (const value of values) {\n      ++index;\n      if (\n        minIndex < 0 ? compare(value, value) === 0 : compare(value, min) < 0\n      ) {\n        min = value;\n        minIndex = index;\n      }\n    }\n  }\n  return minIndex;\n}\n","import leastIndex from './leastIndex.js';\n\nexport default function scan(values, compare) {\n  const index = leastIndex(values, compare);\n  return index < 0 ? undefined : index;\n}\n","export default function shuffle(array, i0 = 0, i1 = array.length) {\n  var m = i1 - (i0 = +i0),\n    t,\n    i;\n\n  while (m) {\n    i = (Math.random() * m--) | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n","export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if ((value = +value)) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = +valueof(value, ++index, values))) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","import min from './min.js';\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (\n    var i = -1, m = min(matrix, length), transpose = new Array(m);\n    ++i < m;\n\n  ) {\n    for (var j = -1, n, row = (transpose[i] = new Array(n)); ++j < n; ) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import transpose from './transpose.js';\n\nexport default function() {\n  return transpose(arguments);\n}\n","export { default as bisect, bisectRight, bisectLeft } from './bisect.js';\nexport { default as ascending } from './ascending.js';\nexport { default as bisector } from './bisector.js';\nexport { default as count } from './count.js';\nexport { default as cross } from './cross.js';\nexport { default as descending } from './descending.js';\nexport { default as deviation } from './deviation.js';\nexport { default as extent } from './extent.js';\nexport { default as group, groups, rollup, rollups } from './group.js';\nexport { default as bin, default as histogram } from './bin.js'; // Deprecated; use bin.\nexport {\n  default as thresholdFreedmanDiaconis,\n} from './threshold/freedmanDiaconis.js';\nexport { default as thresholdScott } from './threshold/scott.js';\nexport { default as thresholdSturges } from './threshold/sturges.js';\nexport { default as max } from './max.js';\nexport { default as maxIndex } from './maxIndex.js';\nexport { default as mean } from './mean.js';\nexport { default as median } from './median.js';\nexport { default as merge } from './merge.js';\nexport { default as min } from './min.js';\nexport { default as minIndex } from './minIndex.js';\nexport { default as pairs } from './pairs.js';\nexport { default as permute } from './permute.js';\nexport { default as quantile } from './quantile.js';\nexport { default as quickselect } from './quickselect.js';\nexport { default as range } from './range.js';\nexport { default as least } from './least.js';\nexport { default as leastIndex } from './leastIndex.js';\nexport { default as scan } from './scan.js'; // Deprecated; use leastIndex.\nexport { default as shuffle } from './shuffle.js';\nexport { default as sum } from './sum.js';\nexport { default as ticks, tickIncrement, tickStep } from './ticks.js';\nexport { default as transpose } from './transpose.js';\nexport { default as variance } from './variance.js';\nexport { default as zip } from './zip.js';\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0:\n      break;\n    case 1:\n      this.range(domain);\n      break;\n    default:\n      this.range(range).domain(domain);\n      break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0:\n      break;\n    case 1:\n      this.interpolator(domain);\n      break;\n    default:\n      this.interpolator(interpolator).domain(domain);\n      break;\n  }\n  return this;\n}\n","import { initRange } from './init';\n\nexport const implicit = Symbol('implicit');\n\nexport default function ordinal() {\n  var index = new Map(),\n    domain = [],\n    range = [],\n    unknown = implicit;\n\n  function scale(d) {\n    var key = d + '',\n      i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, (i = domain.push(d)));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    (domain = []), (index = new Map());\n    for (const value of _) {\n      const key = value + '';\n      if (index.has(key)) continue;\n      index.set(key, domain.push(value));\n    }\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? ((range = Array.from(_)), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? ((unknown = _), scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import { range as sequence } from 'd3-array';\nimport { initRange } from './init';\nimport ordinal from './ordinal';\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n    domain = scale.domain,\n    ordinalRange = scale.range,\n    r0 = 0,\n    r1 = 1,\n    step,\n    bandwidth,\n    round = false,\n    paddingInner = 0,\n    paddingOuter = 0,\n    align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n      reverse = r1 < r0,\n      start = reverse ? r1 : r0,\n      stop = reverse ? r0 : r1;\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) (start = Math.round(start)), (bandwidth = Math.round(bandwidth));\n    var values = sequence(n).map(function(i) {\n      return start + step * i;\n    });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length\n      ? (([r0, r1] = _), (r0 = +r0), (r1 = +r1), rescale())\n      : [r0, r1];\n  };\n\n  scale.rangeRound = function(_) {\n    return ([r0, r1] = _), (r0 = +r0), (r1 = +r1), (round = true), rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? ((round = !!_), rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length\n      ? ((paddingInner = Math.min(1, (paddingOuter = +_))), rescale())\n      : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length\n      ? ((paddingInner = Math.min(1, _)), rescale())\n      : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? ((paddingOuter = +_), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length\n      ? ((align = Math.max(0, Math.min(1, _))), rescale())\n      : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), [r0, r1])\n      .round(round)\n      .paddingInner(paddingInner)\n      .paddingOuter(paddingOuter)\n      .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, { extend } from './define';\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = '\\\\s*([+-]?\\\\d+)\\\\s*',\n  reN = '\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*',\n  reP = '\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*',\n  reHex3 = /^#([0-9a-f]{3})$/,\n  reHex6 = /^#([0-9a-f]{6})$/,\n  reRgbInteger = new RegExp('^rgb\\\\(' + [reI, reI, reI] + '\\\\)$'),\n  reRgbPercent = new RegExp('^rgb\\\\(' + [reP, reP, reP] + '\\\\)$'),\n  reRgbaInteger = new RegExp('^rgba\\\\(' + [reI, reI, reI, reN] + '\\\\)$'),\n  reRgbaPercent = new RegExp('^rgba\\\\(' + [reP, reP, reP, reN] + '\\\\)$'),\n  reHslPercent = new RegExp('^hsl\\\\(' + [reN, reP, reP] + '\\\\)$'),\n  reHslaPercent = new RegExp('^hsla\\\\(' + [reN, reP, reP, reN] + '\\\\)$');\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32,\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + '';\n  },\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + '').trim().toLowerCase();\n  return (m = reHex3.exec(format))\n    ? ((m = parseInt(m[1], 16)),\n      new Rgb(\n        ((m >> 8) & 0xf) | ((m >> 4) & 0x0f0),\n        ((m >> 4) & 0xf) | (m & 0xf0),\n        ((m & 0xf) << 4) | (m & 0xf),\n        1\n      )) // #f00\n    : (m = reHex6.exec(format))\n    ? rgbn(parseInt(m[1], 16)) // #ff0000\n    : (m = reRgbInteger.exec(format))\n    ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n    : (m = reRgbPercent.exec(format))\n    ? new Rgb((m[1] * 255) / 100, (m[2] * 255) / 100, (m[3] * 255) / 100, 1) // rgb(100%, 0%, 0%)\n    : (m = reRgbaInteger.exec(format))\n    ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n    : (m = reRgbaPercent.exec(format))\n    ? rgba((m[1] * 255) / 100, (m[2] * 255) / 100, (m[3] * 255) / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n    : (m = reHslPercent.exec(format))\n    ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n    : (m = reHslaPercent.exec(format))\n    ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n    : named.hasOwnProperty(format)\n    ? rgbn(named[format])\n    : format === 'transparent'\n    ? new Rgb(NaN, NaN, NaN, 0)\n    : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb((n >> 16) & 0xff, (n >> 8) & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb();\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1\n    ? rgbConvert(r)\n    : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (\n      -0.5 <= this.r &&\n      this.r < 255.5 &&\n      (-0.5 <= this.g && this.g < 255.5) &&\n      (-0.5 <= this.b && this.b < 255.5) &&\n      (0 <= this.opacity && this.opacity <= 1)\n    );\n  },\n  hex: function() {\n    return '#' + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity;\n    a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (\n      (a === 1 ? 'rgb(' : 'rgba(') +\n      Math.max(0, Math.min(255, Math.round(this.r) || 0)) +\n      ', ' +\n      Math.max(0, Math.min(255, Math.round(this.g) || 0)) +\n      ', ' +\n      Math.max(0, Math.min(255, Math.round(this.b) || 0)) +\n      (a === 1 ? ')' : ', ' + a + ')')\n    );\n  },\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? '0' : '') + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl();\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n    g = o.g / 255,\n    b = o.b / 255,\n    min = Math.min(r, g, b),\n    max = Math.max(r, g, b),\n    h = NaN,\n    s = max - min,\n    l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1\n    ? hslConvert(h)\n    : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = (this.h % 360) + (this.h < 0) * 360,\n      s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n      l = this.l,\n      m2 = l + (l < 0.5 ? l : 1 - l) * s,\n      m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (\n      ((0 <= this.s && this.s <= 1) || isNaN(this.s)) &&\n      (0 <= this.l && this.l <= 1) &&\n      (0 <= this.opacity && this.opacity <= 1)\n    );\n  },\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (\n    (h < 60\n      ? m1 + ((m2 - m1) * h) / 60\n      : h < 180\n      ? m2\n      : h < 240\n      ? m1 + ((m2 - m1) * (240 - h)) / 60\n      : m1) * 255\n  );\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, { extend } from './define';\nimport { Color, rgbConvert, Rgb } from './color';\nimport { deg2rad, rad2deg } from './math';\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n  Xn = 0.96422,\n  Yn = 1,\n  Zn = 0.82521,\n  t0 = 4 / 29,\n  t1 = 6 / 29,\n  t2 = 3 * t1 * t1,\n  t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n    g = rgb2lrgb(o.g),\n    b = rgb2lrgb(o.b),\n    y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn),\n    x,\n    z;\n  if (r === g && g === b) x = z = y;\n  else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1\n    ? labConvert(l)\n    : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(\n      this.l + K * (k == null ? 1 : k),\n      this.a,\n      this.b,\n      this.opacity\n    );\n  },\n  darker: function(k) {\n    return new Lab(\n      this.l - K * (k == null ? 1 : k),\n      this.a,\n      this.b,\n      this.opacity\n    );\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n      x = isNaN(this.a) ? y : y + this.a / 500,\n      z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.033454 * z),\n      lrgb2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  },\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return (\n    255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055)\n  );\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0)\n    return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(\n    h < 0 ? h + 360 : h,\n    Math.sqrt(o.a * o.a + o.b * o.b),\n    o.l,\n    o.opacity\n  );\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1\n    ? hclConvert(l)\n    : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1\n    ? hclConvert(h)\n    : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * deg2rad;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(\n      this.h,\n      this.c,\n      this.l + K * (k == null ? 1 : k),\n      this.opacity\n    );\n  },\n  darker: function(k) {\n    return new Hcl(\n      this.h,\n      this.c,\n      this.l - K * (k == null ? 1 : k),\n      this.opacity\n    );\n  },\n  rgb: function() {\n    return hcl2lab(this).rgb();\n  },\n}));\n","import define, { extend } from './define';\nimport { Color, rgbConvert, Rgb, darker, brighter } from './color';\nimport { deg2rad, rad2deg } from './math';\n\nvar A = -0.14861,\n  B = +1.78277,\n  C = -0.29227,\n  D = -0.90649,\n  E = +1.97294,\n  ED = E * D,\n  EB = E * B,\n  BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n    g = o.g / 255,\n    b = o.b / 255,\n    l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n    bl = b - l,\n    k = (E * (g - l) - C * bl) / D,\n    s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n    h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1\n    ? cubehelixConvert(h)\n    : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n      l = +this.l,\n      a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n      cosh = Math.cos(h),\n      sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  },\n}));\n","export { default as color, rgb, hsl } from './color';\nexport { default as lab, hcl, lch, gray } from './lab';\nexport { default as cubehelix } from './cubehelix';\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1,\n    t3 = t2 * t1;\n  return (\n    ((1 - 3 * t1 + 3 * t2 - t3) * v0 +\n      (4 - 6 * t2 + 3 * t3) * v1 +\n      (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 +\n      t3 * v3) /\n    6\n  );\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? ((t = 1), n - 1) : Math.floor(t * n),\n      v1 = values[i],\n      v2 = values[i + 1],\n      v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n      v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import { basis } from './basis';\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n      v0 = values[(i + n - 1) % n],\n      v1 = values[i % n],\n      v2 = values[(i + 1) % n],\n      v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from './constant';\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return (\n    (a = Math.pow(a, y)),\n    (b = Math.pow(b, y) - a),\n    (y = 1 / y),\n    function(t) {\n      return Math.pow(a + t * b, y);\n    }\n  );\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d\n    ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d)\n    : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1\n    ? nogamma\n    : function(a, b) {\n        return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n      };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import { rgb as colorRgb } from 'd3-color';\nimport basis from './basis';\nimport basisClosed from './basisClosed';\nimport nogamma, { gamma } from './color';\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n      g = color(start.g, end.g),\n      b = color(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + '';\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n      r = new Array(n),\n      g = new Array(n),\n      b = new Array(n),\n      i,\n      color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + '';\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import value from './value';\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n    na = a ? Math.min(nb, a.length) : 0,\n    x = new Array(na),\n    c = new Array(nb),\n    i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date();\n  return (\n    (a = +a),\n    (b -= a),\n    function(t) {\n      return d.setTime(a + b * t), d;\n    }\n  );\n}\n","export default function(a, b) {\n  return (\n    (a = +a),\n    (b -= a),\n    function(t) {\n      return a + b * t;\n    }\n  );\n}\n","import value from './value';\n\nexport default function(a, b) {\n  var i = {},\n    c = {},\n    k;\n\n  if (a === null || typeof a !== 'object') a = {};\n  if (b === null || typeof b !== 'object') b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from './number';\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n  reB = new RegExp(reA.source, 'g');\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + '';\n  };\n}\n\nexport default function(a, b) {\n  var bi = (reA.lastIndex = reB.lastIndex = 0), // scan index for next number in b\n    am, // current match in a\n    bm, // current match in b\n    bs, // string preceding current number in b, if any\n    i = -1, // index in s\n    s = [], // string constants and placeholders\n    q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  (a = a + ''), (b = b + '');\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a)) && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) {\n      // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs;\n      // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) {\n      // numbers in a & b match\n      if (s[i]) s[i] += bm;\n      // coalesce with previous string\n      else s[++i] = bm;\n    } else {\n      // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({ i: i, x: number(am, bm) });\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs;\n    // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2\n    ? q[0]\n      ? one(q[0].x)\n      : zero(b)\n    : ((b = q.length),\n      function(t) {\n        for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n        return s.join('');\n      });\n}\n","import { color } from 'd3-color';\nimport rgb from './rgb';\nimport array from './array';\nimport date from './date';\nimport number from './number';\nimport object from './object';\nimport string from './string';\nimport constant from './constant';\n\nexport default function(a, b) {\n  var t = typeof b,\n    c;\n  return b == null || t === 'boolean'\n    ? constant(b)\n    : (t === 'number'\n        ? number\n        : t === 'string'\n        ? (c = color(b))\n          ? ((b = c), rgb)\n          : string\n        : b instanceof color\n        ? rgb\n        : b instanceof Date\n        ? date\n        : Array.isArray(b)\n        ? array\n        : (typeof b.valueOf !== 'function' &&\n            typeof b.toString !== 'function') ||\n          isNaN(b)\n        ? object\n        : number)(a, b);\n}\n","export default function(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n","import { hue } from './color';\n\nexport default function(a, b) {\n  var i = hue(+a, +b);\n  return function(t) {\n    var x = i(t);\n    return x - 360 * Math.floor(x / 360);\n  };\n}\n","export default function(a, b) {\n  return (\n    (a = +a),\n    (b -= a),\n    function(t) {\n      return Math.round(a + b * t);\n    }\n  );\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1,\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if ((scaleX = Math.sqrt(a * a + b * b))) (a /= scaleX), (b /= scaleX);\n  if ((skewX = a * c + b * d)) (c -= a * skewX), (d -= b * skewX);\n  if ((scaleY = Math.sqrt(c * c + d * d)))\n    (c /= scaleY), (d /= scaleY), (skewX /= scaleY);\n  if (a * d < b * c) (a = -a), (b = -b), (skewX = -skewX), (scaleX = -scaleX);\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY,\n  };\n}\n","import decompose, { identity } from './decompose';\n\nvar cssNode, cssRoot, cssView, svgNode;\n\nexport function parseCss(value) {\n  if (value === 'none') return identity;\n  if (!cssNode)\n    (cssNode = document.createElement('DIV')),\n      (cssRoot = document.documentElement),\n      (cssView = document.defaultView);\n  cssNode.style.transform = value;\n  value = cssView\n    .getComputedStyle(cssRoot.appendChild(cssNode), null)\n    .getPropertyValue('transform');\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(',');\n  return decompose(\n    +value[0],\n    +value[1],\n    +value[2],\n    +value[3],\n    +value[4],\n    +value[5]\n  );\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode)\n    svgNode = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n  svgNode.setAttribute('transform', value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import number from '../number';\nimport { parseCss, parseSvg } from './parse';\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n  function pop(s) {\n    return s.length ? s.pop() + ' ' : '';\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push('translate(', null, pxComma, null, pxParen);\n      q.push({ i: i - 4, x: number(xa, xb) }, { i: i - 2, x: number(ya, yb) });\n    } else if (xb || yb) {\n      s.push('translate(' + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360;\n      else if (b - a > 180) a += 360; // shortest path\n      q.push({\n        i: s.push(pop(s) + 'rotate(', null, degParen) - 2,\n        x: number(a, b),\n      });\n    } else if (b) {\n      s.push(pop(s) + 'rotate(' + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({\n        i: s.push(pop(s) + 'skewX(', null, degParen) - 2,\n        x: number(a, b),\n      });\n    } else if (b) {\n      s.push(pop(s) + 'skewX(' + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + 'scale(', null, ',', null, ')');\n      q.push({ i: i - 4, x: number(xa, xb) }, { i: i - 2, x: number(ya, yb) });\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + 'scale(' + xb + ',' + yb + ')');\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n      q = []; // number interpolators\n    (a = parse(a)), (b = parse(b));\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1,\n        n = q.length,\n        o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join('');\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(\n  parseCss,\n  'px, ',\n  'px)',\n  'deg)'\n);\nexport var interpolateTransformSvg = interpolateTransform(\n  parseSvg,\n  ', ',\n  ')',\n  ')'\n);\n","var rho = Math.SQRT2,\n  rho2 = 2,\n  rho4 = 4,\n  epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0],\n    uy0 = p0[1],\n    w0 = p0[2],\n    ux1 = p1[0],\n    uy1 = p1[1],\n    w1 = p1[2],\n    dx = ux1 - ux0,\n    dy = uy1 - uy0,\n    d2 = dx * dx + dy * dy,\n    i,\n    S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(rho * t * S)];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n      b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n      b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n      r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n      r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n        coshr0 = cosh(r0),\n        u = (w0 / (rho2 * d1)) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [ux0 + u * dx, uy0 + u * dy, (w0 * coshr0) / cosh(rho * s + r0)];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import { hsl as colorHsl } from 'd3-color';\nimport color, { hue } from './color';\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n      s = color(start.s, end.s),\n      l = color(start.l, end.l),\n      opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + '';\n    };\n  };\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import { lab as colorLab } from 'd3-color';\nimport color from './color';\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n    a = color(start.a, end.a),\n    b = color(start.b, end.b),\n    opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + '';\n  };\n}\n","import { hcl as colorHcl } from 'd3-color';\nimport color, { hue } from './color';\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n      c = color(start.c, end.c),\n      l = color(start.l, end.l),\n      opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + '';\n    };\n  };\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import { cubehelix as colorCubehelix } from 'd3-color';\nimport color, { hue } from './color';\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue(\n          (start = colorCubehelix(start)).h,\n          (end = colorCubehelix(end)).h\n        ),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + '';\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0,\n    n = values.length - 1,\n    v = values[0],\n    I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, (v = values[++i]));\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor((t *= n))));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export { default as interpolate } from './value';\nexport { default as interpolateArray } from './array';\nexport { default as interpolateBasis } from './basis';\nexport { default as interpolateBasisClosed } from './basisClosed';\nexport { default as interpolateDate } from './date';\nexport { default as interpolateDiscrete } from './discrete';\nexport { default as interpolateHue } from './hue';\nexport { default as interpolateNumber } from './number';\nexport { default as interpolateObject } from './object';\nexport { default as interpolateRound } from './round';\nexport { default as interpolateString } from './string';\nexport {\n  interpolateTransformCss,\n  interpolateTransformSvg,\n} from './transform/index';\nexport { default as interpolateZoom } from './zoom';\nexport {\n  default as interpolateRgb,\n  rgbBasis as interpolateRgbBasis,\n  rgbBasisClosed as interpolateRgbBasisClosed,\n} from './rgb';\nexport {\n  default as interpolateHsl,\n  hslLong as interpolateHslLong,\n} from './hsl';\nexport { default as interpolateLab } from './lab';\nexport {\n  default as interpolateHcl,\n  hclLong as interpolateHclLong,\n} from './hcl';\nexport {\n  default as interpolateCubehelix,\n  cubehelixLong as interpolateCubehelixLong,\n} from './cubehelix';\nexport { default as piecewise } from './piecewise';\nexport { default as quantize } from './quantize';\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import { bisect } from 'd3-array';\nimport {\n  interpolate as interpolateValue,\n  interpolateNumber,\n  interpolateRound,\n} from 'd3-interpolate';\nimport constant from './constant';\nimport number from './number';\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= a = +a)\n    ? function(x) {\n        return (x - a) / b;\n      }\n    : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(domain) {\n  var a = domain[0],\n    b = domain[domain.length - 1],\n    t;\n  if (a > b) (t = a), (a = b), (b = t);\n  return function(x) {\n    return Math.max(a, Math.min(b, x));\n  };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0],\n    d1 = domain[1],\n    r0 = range[0],\n    r1 = range[1];\n  if (d1 < d0) (d0 = normalize(d1, d0)), (r0 = interpolate(r1, r0));\n  else (d0 = normalize(d0, d1)), (r0 = interpolate(r0, r1));\n  return function(x) {\n    return r0(d0(x));\n  };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n    d = new Array(j),\n    r = new Array(j),\n    i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n    .domain(source.domain())\n    .range(source.range())\n    .interpolate(source.interpolate())\n    .clamp(source.clamp())\n    .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n    range = unit,\n    interpolate = interpolateValue,\n    transform,\n    untransform,\n    unknown,\n    clamp = identity,\n    piecewise,\n    output,\n    input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN((x = +x))\n      ? unknown\n      : (output ||\n          (output = piecewise(domain.map(transform), range, interpolate)))(\n          transform(clamp(x))\n        );\n  }\n\n  scale.invert = function(y) {\n    return clamp(\n      untransform(\n        (input ||\n          (input = piecewise(range, domain.map(transform), interpolateNumber)))(\n          y\n        )\n      )\n    );\n  };\n\n  scale.domain = function(_) {\n    return arguments.length\n      ? ((domain = Array.from(_, number)),\n        clamp === identity || (clamp = clamper(domain)),\n        rescale())\n      : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length\n      ? ((range = Array.from(_)), rescale())\n      : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return (range = Array.from(_)), (interpolate = interpolateRound), rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length\n      ? ((clamp = _ ? clamper(domain) : identity), scale)\n      : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? ((interpolate = _), rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? ((unknown = _), scale) : unknown;\n  };\n\n  return function(t, u) {\n    (transform = t), (untransform = u);\n    return rescale();\n  };\n}\n\nexport default function continuous(transform, untransform) {\n  return transformer()(transform, untransform);\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if (\n    (i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf('e')) < 0\n  )\n    return null; // NaN, ±Infinity\n  var i,\n    coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1\n      ? coefficient[0] + coefficient.slice(2)\n      : coefficient,\n    +x.slice(i + 1),\n  ];\n}\n","import formatDecimal from './formatDecimal';\n\nexport default function(x) {\n  return (x = formatDecimal(Math.abs(x))), x ? x[1] : NaN;\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n      t = [],\n      j = 0,\n      g = grouping[0],\n      length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring((i -= g), i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[(j = (j + 1) % grouping.length)];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier)))\n    throw new Error('invalid format: ' + specifier);\n  var match;\n  this.fill = match[1] || ' ';\n  this.align = match[2] || '>';\n  this.sign = match[3] || '-';\n  this.symbol = match[4] || '';\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || '';\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return (\n    this.fill +\n    this.align +\n    this.sign +\n    this.symbol +\n    (this.zero ? '0' : '') +\n    (this.width == null ? '' : Math.max(1, this.width | 0)) +\n    (this.comma ? ',' : '') +\n    (this.precision == null ? '' : '.' + Math.max(0, this.precision | 0)) +\n    (this.trim ? '~' : '') +\n    this.type\n  );\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case '.':\n        i0 = i1 = i;\n        break;\n      case '0':\n        if (i0 === 0) i0 = i;\n        i1 = i;\n        break;\n      default:\n        if (i0 > 0) {\n          if (!+s[i]) break out;\n          i0 = 0;\n        }\n        break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from './formatDecimal';\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + '';\n  var coefficient = d[0],\n    exponent = d[1],\n    i =\n      exponent -\n      (prefixExponent =\n        Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) +\n      1,\n    n = coefficient.length;\n  return i === n\n    ? coefficient\n    : i > n\n    ? coefficient + new Array(i - n + 1).join('0')\n    : i > 0\n    ? coefficient.slice(0, i) + '.' + coefficient.slice(i)\n    : '0.' +\n      new Array(1 - i).join('0') +\n      formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatDecimal from './formatDecimal';\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + '';\n  var coefficient = d[0],\n    exponent = d[1];\n  return exponent < 0\n    ? '0.' + new Array(-exponent).join('0') + coefficient\n    : coefficient.length > exponent + 1\n    ? coefficient.slice(0, exponent + 1) + '.' + coefficient.slice(exponent + 1)\n    : coefficient + new Array(exponent - coefficient.length + 2).join('0');\n}\n","import formatPrefixAuto from './formatPrefixAuto';\nimport formatRounded from './formatRounded';\n\nexport default {\n  '%': function(x, p) {\n    return (x * 100).toFixed(p);\n  },\n  b: function(x) {\n    return Math.round(x).toString(2);\n  },\n  c: function(x) {\n    return x + '';\n  },\n  d: function(x) {\n    return Math.round(x).toString(10);\n  },\n  e: function(x, p) {\n    return x.toExponential(p);\n  },\n  f: function(x, p) {\n    return x.toFixed(p);\n  },\n  g: function(x, p) {\n    return x.toPrecision(p);\n  },\n  o: function(x) {\n    return Math.round(x).toString(8);\n  },\n  p: function(x, p) {\n    return formatRounded(x * 100, p);\n  },\n  r: formatRounded,\n  s: formatPrefixAuto,\n  X: function(x) {\n    return Math.round(x)\n      .toString(16)\n      .toUpperCase();\n  },\n  x: function(x) {\n    return Math.round(x).toString(16);\n  },\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from './exponent';\nimport formatGroup from './formatGroup';\nimport formatNumerals from './formatNumerals';\nimport formatSpecifier from './formatSpecifier';\nimport formatTrim from './formatTrim';\nimport formatTypes from './formatTypes';\nimport { prefixExponent } from './formatPrefixAuto';\nimport identity from './identity';\n\nvar prefixes = [\n  'y',\n  'z',\n  'a',\n  'f',\n  'p',\n  'n',\n  'µ',\n  'm',\n  '',\n  'k',\n  'M',\n  'G',\n  'T',\n  'P',\n  'E',\n  'Z',\n  'Y',\n];\n\nexport default function(locale) {\n  var group =\n      locale.grouping && locale.thousands\n        ? formatGroup(locale.grouping, locale.thousands)\n        : identity,\n    currency = locale.currency,\n    decimal = locale.decimal,\n    numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n    percent = locale.percent || '%';\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n      align = specifier.align,\n      sign = specifier.sign,\n      symbol = specifier.symbol,\n      zero = specifier.zero,\n      width = specifier.width,\n      comma = specifier.comma,\n      precision = specifier.precision,\n      trim = specifier.trim,\n      type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === 'n') (comma = true), (type = 'g');\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type])\n      precision == null && (precision = 12), (trim = true), (type = 'g');\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === '0' && align === '='))\n      (zero = true), (fill = '0'), (align = '=');\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix =\n        symbol === '$'\n          ? currency[0]\n          : symbol === '#' && /[boxX]/.test(type)\n          ? '0' + type.toLowerCase()\n          : '',\n      suffix = symbol === '$' ? currency[1] : /[%p]/.test(type) ? percent : '';\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n      maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision =\n      precision == null\n        ? 6\n        : /[gprs]/.test(type)\n        ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n        valueSuffix = suffix,\n        i,\n        n,\n        c;\n\n      if (type === 'c') {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = '';\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix =\n          (valueNegative\n            ? sign === '('\n              ? sign\n              : '-'\n            : sign === '-' || sign === '('\n            ? ''\n            : sign) + valuePrefix;\n        valueSuffix =\n          (type === 's' ? prefixes[8 + prefixExponent / 3] : '') +\n          valueSuffix +\n          (valueNegative && sign === '(' ? ')' : '');\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          (i = -1), (n = value.length);\n          while (++i < n) {\n            if (((c = value.charCodeAt(i)), 48 > c || c > 57)) {\n              valueSuffix =\n                (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) +\n                valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n        padding =\n          length < width ? new Array(width - length + 1).join(fill) : '';\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero)\n        (value = group(\n          padding + value,\n          padding.length ? width - valueSuffix.length : Infinity\n        )),\n          (padding = '');\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case '<':\n          value = valuePrefix + value + valueSuffix + padding;\n          break;\n        case '=':\n          value = valuePrefix + padding + value + valueSuffix;\n          break;\n        case '^':\n          value =\n            padding.slice(0, (length = padding.length >> 1)) +\n            valuePrefix +\n            value +\n            valueSuffix +\n            padding.slice(length);\n          break;\n        default:\n          value = padding + valuePrefix + value + valueSuffix;\n          break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + '';\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat(\n        ((specifier = formatSpecifier(specifier)),\n        (specifier.type = 'f'),\n        specifier)\n      ),\n      e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n      k = Math.pow(10, -e),\n      prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix,\n  };\n}\n","import formatLocale from './locale';\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: '.',\n  thousands: ',',\n  grouping: [3],\n  currency: ['$', ''],\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import exponent from './exponent';\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from './exponent';\n\nexport default function(step, value) {\n  return Math.max(\n    0,\n    Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 -\n      exponent(Math.abs(step))\n  );\n}\n","import exponent from './exponent';\n\nexport default function(step, max) {\n  (step = Math.abs(step)), (max = Math.abs(max) - step);\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","export {\n  default as formatDefaultLocale,\n  format,\n  formatPrefix,\n} from './defaultLocale';\nexport { default as formatLocale } from './locale';\nexport { default as formatSpecifier } from './formatSpecifier';\nexport { default as precisionFixed } from './precisionFixed';\nexport { default as precisionPrefix } from './precisionPrefix';\nexport { default as precisionRound } from './precisionRound';\n","import { tickStep } from 'd3-array';\nimport {\n  format,\n  formatPrefix,\n  formatSpecifier,\n  precisionFixed,\n  precisionPrefix,\n  precisionRound,\n} from 'd3-format';\n\nexport default function(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n    precision;\n  specifier = formatSpecifier(specifier == null ? ',f' : specifier);\n  switch (specifier.type) {\n    case 's': {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (\n        specifier.precision == null &&\n        !isNaN((precision = precisionPrefix(step, value)))\n      )\n        specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case '':\n    case 'e':\n    case 'g':\n    case 'p':\n    case 'r': {\n      if (\n        specifier.precision == null &&\n        !isNaN(\n          (precision = precisionRound(\n            step,\n            Math.max(Math.abs(start), Math.abs(stop))\n          ))\n        )\n      )\n        specifier.precision = precision - (specifier.type === 'e');\n      break;\n    }\n    case 'f':\n    case '%': {\n      if (\n        specifier.precision == null &&\n        !isNaN((precision = precisionFixed(step)))\n      )\n        specifier.precision = precision - (specifier.type === '%') * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import { ticks, tickIncrement } from 'd3-array';\nimport continuous, { copy, identity } from './continuous';\nimport { initRange } from './init';\nimport tickFormat from './tickFormat';\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(\n      d[0],\n      d[d.length - 1],\n      count == null ? 10 : count,\n      specifier\n    );\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n      i0 = 0,\n      i1 = d.length - 1,\n      start = d[i0],\n      stop = d[i1],\n      step;\n\n    if (stop < start) {\n      (step = start), (start = stop), (stop = step);\n      (step = i0), (i0 = i1), (i1 = step);\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(identity, identity);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","import { linearish } from './linear';\nimport number from './number';\n\nexport default function identity(domain) {\n  var unknown;\n\n  function scale(x) {\n    return isNaN((x = +x)) ? unknown : x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length\n      ? ((domain = Array.from(_, number)), scale)\n      : domain.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? ((unknown = _), scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return identity(domain).unknown(unknown);\n  };\n\n  domain = arguments.length ? Array.from(domain, number) : [0, 1];\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n    i1 = domain.length - 1,\n    x0 = domain[i0],\n    x1 = domain[i1],\n    t;\n\n  if (x1 < x0) {\n    (t = i0), (i0 = i1), (i1 = t);\n    (t = x0), (x0 = x1), (x1 = t);\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import { ticks } from 'd3-array';\nimport { format } from 'd3-format';\nimport nice from './nice';\nimport { copy, transformer } from './continuous';\nimport { initRange } from './init';\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +('1e' + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10\n    ? pow10\n    : base === Math.E\n    ? Math.exp\n    : function(x) {\n        return Math.pow(base, x);\n      };\n}\n\nfunction logp(base) {\n  return base === Math.E\n    ? Math.log\n    : (base === 10 && Math.log10) ||\n        (base === 2 && Math.log2) ||\n        ((base = Math.log(base)),\n        function(x) {\n          return Math.log(x) / base;\n        });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport function loggish(transform) {\n  var scale = transform(transformLog, transformExp),\n    domain = scale.domain,\n    base = 10,\n    logs,\n    pows;\n\n  function rescale() {\n    (logs = logp(base)), (pows = powp(base));\n    if (domain()[0] < 0) {\n      (logs = reflect(logs)), (pows = reflect(pows));\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? ((base = +_), rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n      u = d[0],\n      v = d[d.length - 1],\n      r;\n\n    if ((r = v < u)) (i = u), (u = v), (v = i);\n\n    var i = logs(u),\n      j = logs(v),\n      p,\n      k,\n      t,\n      n = count == null ? 10 : +count,\n      z = [];\n\n    if (!(base % 1) && j - i < n) {\n      (i = Math.round(i) - 1), (j = Math.round(j) + 1);\n      if (u > 0)\n        for (; i < j; ++i) {\n          for (k = 1, p = pows(i); k < base; ++k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        }\n      else\n        for (; i < j; ++i) {\n          for (k = base - 1, p = pows(i); k >= 1; --k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? '.0e' : ',';\n    if (typeof specifier !== 'function') specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, (base * count) / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : '';\n    };\n  };\n\n  scale.nice = function() {\n    return domain(\n      nice(domain(), {\n        floor: function(x) {\n          return pows(Math.floor(logs(x)));\n        },\n        ceil: function(x) {\n          return pows(Math.ceil(logs(x)));\n        },\n      })\n    );\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, log()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import { linearish } from './linear';\nimport { copy, transformer } from './continuous';\nimport { initRange } from './init';\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nexport function symlogish(transform) {\n  var c = 1,\n    scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length\n      ? transform(transformSymlog((c = +_)), transformSymexp(c))\n      : c;\n  };\n\n  return linearish(scale);\n}\n\nexport default function symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import { linearish } from './linear';\nimport { copy, identity, transformer } from './continuous';\nimport { initRange } from './init';\n\nfunction transformPow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nexport function powish(transform) {\n  var scale = transform(identity, identity),\n    exponent = 1;\n\n  function rescale() {\n    return exponent === 1\n      ? transform(identity, identity)\n      : exponent === 0.5\n      ? transform(transformSqrt, transformSquare)\n      : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? ((exponent = +_), rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\n\nexport default function pow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, pow()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nexport function sqrt() {\n  return pow.apply(null, arguments).exponent(0.5);\n}\n","import { ascending, bisect, quantile as threshold } from 'd3-array';\nimport { initRange } from './init';\n\nexport default function quantile() {\n  var domain = [],\n    range = [],\n    thresholds = [],\n    unknown;\n\n  function rescale() {\n    var i = 0,\n      n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN((x = +x)) ? unknown : range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0\n      ? [NaN, NaN]\n      : [\n          i > 0 ? thresholds[i - 1] : domain[0],\n          i < thresholds.length ? thresholds[i] : domain[domain.length - 1],\n        ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (let d of _) if (d != null && !isNaN((d = +d))) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length\n      ? ((range = Array.from(_)), rescale())\n      : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? ((unknown = _), scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n      .domain(domain)\n      .range(range)\n      .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import { bisect } from 'd3-array';\nimport { linearish } from './linear';\nimport { initRange } from './init';\n\nexport default function quantize() {\n  var x0 = 0,\n    x1 = 1,\n    n = 1,\n    domain = [0.5],\n    range = [0, 1],\n    unknown;\n\n  function scale(x) {\n    return x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length\n      ? (([x0, x1] = _), (x0 = +x0), (x1 = +x1), rescale())\n      : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length\n      ? ((n = (range = Array.from(_)).length - 1), rescale())\n      : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0\n      ? [NaN, NaN]\n      : i < 1\n      ? [x0, domain[0]]\n      : i >= n\n      ? [domain[n - 1], x1]\n      : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? ((unknown = _), scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize()\n      .domain([x0, x1])\n      .range(range)\n      .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n","import { bisect } from 'd3-array';\nimport { initRange } from './init';\n\nexport default function threshold() {\n  var domain = [0.5],\n    range = [0, 1],\n    unknown,\n    n = 1;\n\n  function scale(x) {\n    return x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length\n      ? ((domain = Array.from(_)),\n        (n = Math.min(domain.length, range.length - 1)),\n        scale)\n      : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length\n      ? ((range = Array.from(_)),\n        (n = Math.min(domain.length, range.length - 1)),\n        scale)\n      : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? ((unknown = _), scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return threshold()\n      .domain(domain)\n      .range(range)\n      .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","var t0 = new Date(),\n  t1 = new Date();\n\nexport default function newInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori((date = new Date(+date))), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return (\n      floori((date = new Date(date - 1))), offseti(date, 1), floori(date), date\n    );\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n      d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return (\n      offseti((date = new Date(+date)), step == null ? 1 : Math.floor(step)),\n      date\n    );\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [],\n      previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do\n      range.push((previous = new Date(+start))),\n        offseti(start, step),\n        floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(\n      function(date) {\n        if (date >= date)\n          while ((floori(date), !test(date))) date.setTime(date - 1);\n      },\n      function(date, step) {\n        if (date >= date) {\n          if (step < 0)\n            while (++step <= 0) {\n              while ((offseti(date, -1), !test(date))) {} // eslint-disable-line no-empty\n            }\n          else\n            while (--step >= 0) {\n              while ((offseti(date, +1), !test(date))) {} // eslint-disable-line no-empty\n            }\n        }\n      }\n    );\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0)\n        ? null\n        : !(step > 1)\n        ? interval\n        : interval.filter(\n            field\n              ? function(d) {\n                  return field(d) % step === 0;\n                }\n              : function(d) {\n                  return interval.count(0, d) % step === 0;\n                }\n          );\n    };\n  }\n\n  return interval;\n}\n","import interval from './interval';\n\nvar millisecond = interval(\n  function() {\n    // noop\n  },\n  function(date, step) {\n    date.setTime(+date + step);\n  },\n  function(start, end) {\n    return end - start;\n  }\n);\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(\n    function(date) {\n      date.setTime(Math.floor(date / k) * k);\n    },\n    function(date, step) {\n      date.setTime(+date + step * k);\n    },\n    function(start, end) {\n      return (end - start) / k;\n    }\n  );\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from './interval';\nimport { durationSecond } from './duration';\n\nvar second = interval(\n  function(date) {\n    date.setTime(date - date.getMilliseconds());\n  },\n  function(date, step) {\n    date.setTime(+date + step * durationSecond);\n  },\n  function(start, end) {\n    return (end - start) / durationSecond;\n  },\n  function(date) {\n    return date.getUTCSeconds();\n  }\n);\n\nexport default second;\nexport var seconds = second.range;\n","import interval from './interval';\nimport { durationMinute, durationSecond } from './duration';\n\nvar minute = interval(\n  function(date) {\n    date.setTime(\n      date - date.getMilliseconds() - date.getSeconds() * durationSecond\n    );\n  },\n  function(date, step) {\n    date.setTime(+date + step * durationMinute);\n  },\n  function(start, end) {\n    return (end - start) / durationMinute;\n  },\n  function(date) {\n    return date.getMinutes();\n  }\n);\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from './interval';\nimport { durationHour, durationMinute, durationSecond } from './duration';\n\nvar hour = interval(\n  function(date) {\n    date.setTime(\n      date -\n        date.getMilliseconds() -\n        date.getSeconds() * durationSecond -\n        date.getMinutes() * durationMinute\n    );\n  },\n  function(date, step) {\n    date.setTime(+date + step * durationHour);\n  },\n  function(start, end) {\n    return (end - start) / durationHour;\n  },\n  function(date) {\n    return date.getHours();\n  }\n);\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from './interval';\nimport { durationDay, durationMinute } from './duration';\n\nvar day = interval(\n  function(date) {\n    date.setHours(0, 0, 0, 0);\n  },\n  function(date, step) {\n    date.setDate(date.getDate() + step);\n  },\n  function(start, end) {\n    return (\n      (end -\n        start -\n        (end.getTimezoneOffset() - start.getTimezoneOffset()) *\n          durationMinute) /\n      durationDay\n    );\n  },\n  function(date) {\n    return date.getDate() - 1;\n  }\n);\n\nexport default day;\nexport var days = day.range;\n","import interval from './interval';\nimport { durationMinute, durationWeek } from './duration';\n\nfunction weekday(i) {\n  return interval(\n    function(date) {\n      date.setDate(date.getDate() - ((date.getDay() + 7 - i) % 7));\n      date.setHours(0, 0, 0, 0);\n    },\n    function(date, step) {\n      date.setDate(date.getDate() + step * 7);\n    },\n    function(start, end) {\n      return (\n        (end -\n          start -\n          (end.getTimezoneOffset() - start.getTimezoneOffset()) *\n            durationMinute) /\n        durationWeek\n      );\n    }\n  );\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from './interval';\n\nvar month = interval(\n  function(date) {\n    date.setDate(1);\n    date.setHours(0, 0, 0, 0);\n  },\n  function(date, step) {\n    date.setMonth(date.getMonth() + step);\n  },\n  function(start, end) {\n    return (\n      end.getMonth() -\n      start.getMonth() +\n      (end.getFullYear() - start.getFullYear()) * 12\n    );\n  },\n  function(date) {\n    return date.getMonth();\n  }\n);\n\nexport default month;\nexport var months = month.range;\n","import interval from './interval';\n\nvar year = interval(\n  function(date) {\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  },\n  function(date, step) {\n    date.setFullYear(date.getFullYear() + step);\n  },\n  function(start, end) {\n    return end.getFullYear() - start.getFullYear();\n  },\n  function(date) {\n    return date.getFullYear();\n  }\n);\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite((k = Math.floor(k))) || !(k > 0)\n    ? null\n    : interval(\n        function(date) {\n          date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n          date.setMonth(0, 1);\n          date.setHours(0, 0, 0, 0);\n        },\n        function(date, step) {\n          date.setFullYear(date.getFullYear() + step * k);\n        }\n      );\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from './interval';\nimport { durationMinute } from './duration';\n\nvar utcMinute = interval(\n  function(date) {\n    date.setUTCSeconds(0, 0);\n  },\n  function(date, step) {\n    date.setTime(+date + step * durationMinute);\n  },\n  function(start, end) {\n    return (end - start) / durationMinute;\n  },\n  function(date) {\n    return date.getUTCMinutes();\n  }\n);\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from './interval';\nimport { durationHour } from './duration';\n\nvar utcHour = interval(\n  function(date) {\n    date.setUTCMinutes(0, 0, 0);\n  },\n  function(date, step) {\n    date.setTime(+date + step * durationHour);\n  },\n  function(start, end) {\n    return (end - start) / durationHour;\n  },\n  function(date) {\n    return date.getUTCHours();\n  }\n);\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from './interval';\nimport { durationDay } from './duration';\n\nvar utcDay = interval(\n  function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n  },\n  function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step);\n  },\n  function(start, end) {\n    return (end - start) / durationDay;\n  },\n  function(date) {\n    return date.getUTCDate() - 1;\n  }\n);\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from './interval';\nimport { durationWeek } from './duration';\n\nfunction utcWeekday(i) {\n  return interval(\n    function(date) {\n      date.setUTCDate(date.getUTCDate() - ((date.getUTCDay() + 7 - i) % 7));\n      date.setUTCHours(0, 0, 0, 0);\n    },\n    function(date, step) {\n      date.setUTCDate(date.getUTCDate() + step * 7);\n    },\n    function(start, end) {\n      return (end - start) / durationWeek;\n    }\n  );\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from './interval';\n\nvar utcMonth = interval(\n  function(date) {\n    date.setUTCDate(1);\n    date.setUTCHours(0, 0, 0, 0);\n  },\n  function(date, step) {\n    date.setUTCMonth(date.getUTCMonth() + step);\n  },\n  function(start, end) {\n    return (\n      end.getUTCMonth() -\n      start.getUTCMonth() +\n      (end.getUTCFullYear() - start.getUTCFullYear()) * 12\n    );\n  },\n  function(date) {\n    return date.getUTCMonth();\n  }\n);\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from './interval';\n\nvar utcYear = interval(\n  function(date) {\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  },\n  function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step);\n  },\n  function(start, end) {\n    return end.getUTCFullYear() - start.getUTCFullYear();\n  },\n  function(date) {\n    return date.getUTCFullYear();\n  }\n);\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite((k = Math.floor(k))) || !(k > 0)\n    ? null\n    : interval(\n        function(date) {\n          date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n          date.setUTCMonth(0, 1);\n          date.setUTCHours(0, 0, 0, 0);\n        },\n        function(date, step) {\n          date.setUTCFullYear(date.getUTCFullYear() + step * k);\n        }\n      );\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","export { default as timeInterval } from './interval';\n\nexport {\n  default as timeMillisecond,\n  milliseconds as timeMilliseconds,\n  default as utcMillisecond,\n  milliseconds as utcMilliseconds,\n} from './millisecond';\n\nexport {\n  default as timeSecond,\n  seconds as timeSeconds,\n  default as utcSecond,\n  seconds as utcSeconds,\n} from './second';\n\nexport { default as timeMinute, minutes as timeMinutes } from './minute';\n\nexport { default as timeHour, hours as timeHours } from './hour';\n\nexport { default as timeDay, days as timeDays } from './day';\n\nexport {\n  sunday as timeWeek,\n  sundays as timeWeeks,\n  sunday as timeSunday,\n  sundays as timeSundays,\n  monday as timeMonday,\n  mondays as timeMondays,\n  tuesday as timeTuesday,\n  tuesdays as timeTuesdays,\n  wednesday as timeWednesday,\n  wednesdays as timeWednesdays,\n  thursday as timeThursday,\n  thursdays as timeThursdays,\n  friday as timeFriday,\n  fridays as timeFridays,\n  saturday as timeSaturday,\n  saturdays as timeSaturdays,\n} from './week';\n\nexport { default as timeMonth, months as timeMonths } from './month';\n\nexport { default as timeYear, years as timeYears } from './year';\n\nexport { default as utcMinute, utcMinutes } from './utcMinute';\n\nexport { default as utcHour, utcHours } from './utcHour';\n\nexport { default as utcDay, utcDays } from './utcDay';\n\nexport {\n  utcSunday as utcWeek,\n  utcSundays as utcWeeks,\n  utcSunday,\n  utcSundays,\n  utcMonday,\n  utcMondays,\n  utcTuesday,\n  utcTuesdays,\n  utcWednesday,\n  utcWednesdays,\n  utcThursday,\n  utcThursdays,\n  utcFriday,\n  utcFridays,\n  utcSaturday,\n  utcSaturdays,\n} from './utcWeek';\n\nexport { default as utcMonth, utcMonths } from './utcMonth';\n\nexport { default as utcYear, utcYears } from './utcYear';\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear,\n} from 'd3-time';\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return { y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0 };\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n    locale_date = locale.date,\n    locale_time = locale.time,\n    locale_periods = locale.periods,\n    locale_weekdays = locale.days,\n    locale_shortWeekdays = locale.shortDays,\n    locale_months = locale.months,\n    locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n    periodLookup = formatLookup(locale_periods),\n    weekdayRe = formatRe(locale_weekdays),\n    weekdayLookup = formatLookup(locale_weekdays),\n    shortWeekdayRe = formatRe(locale_shortWeekdays),\n    shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n    monthRe = formatRe(locale_months),\n    monthLookup = formatLookup(locale_months),\n    shortMonthRe = formatRe(locale_shortMonths),\n    shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    a: formatShortWeekday,\n    A: formatWeekday,\n    b: formatShortMonth,\n    B: formatMonth,\n    c: null,\n    d: formatDayOfMonth,\n    e: formatDayOfMonth,\n    f: formatMicroseconds,\n    H: formatHour24,\n    I: formatHour12,\n    j: formatDayOfYear,\n    L: formatMilliseconds,\n    m: formatMonthNumber,\n    M: formatMinutes,\n    p: formatPeriod,\n    Q: formatUnixTimestamp,\n    s: formatUnixTimestampSeconds,\n    S: formatSeconds,\n    u: formatWeekdayNumberMonday,\n    U: formatWeekNumberSunday,\n    V: formatWeekNumberISO,\n    w: formatWeekdayNumberSunday,\n    W: formatWeekNumberMonday,\n    x: null,\n    X: null,\n    y: formatYear,\n    Y: formatFullYear,\n    Z: formatZone,\n    '%': formatLiteralPercent,\n  };\n\n  var utcFormats = {\n    a: formatUTCShortWeekday,\n    A: formatUTCWeekday,\n    b: formatUTCShortMonth,\n    B: formatUTCMonth,\n    c: null,\n    d: formatUTCDayOfMonth,\n    e: formatUTCDayOfMonth,\n    f: formatUTCMicroseconds,\n    H: formatUTCHour24,\n    I: formatUTCHour12,\n    j: formatUTCDayOfYear,\n    L: formatUTCMilliseconds,\n    m: formatUTCMonthNumber,\n    M: formatUTCMinutes,\n    p: formatUTCPeriod,\n    Q: formatUnixTimestamp,\n    s: formatUnixTimestampSeconds,\n    S: formatUTCSeconds,\n    u: formatUTCWeekdayNumberMonday,\n    U: formatUTCWeekNumberSunday,\n    V: formatUTCWeekNumberISO,\n    w: formatUTCWeekdayNumberSunday,\n    W: formatUTCWeekNumberMonday,\n    x: null,\n    X: null,\n    y: formatUTCYear,\n    Y: formatUTCFullYear,\n    Z: formatUTCZone,\n    '%': formatLiteralPercent,\n  };\n\n  var parses = {\n    a: parseShortWeekday,\n    A: parseWeekday,\n    b: parseShortMonth,\n    B: parseMonth,\n    c: parseLocaleDateTime,\n    d: parseDayOfMonth,\n    e: parseDayOfMonth,\n    f: parseMicroseconds,\n    H: parseHour24,\n    I: parseHour24,\n    j: parseDayOfYear,\n    L: parseMilliseconds,\n    m: parseMonthNumber,\n    M: parseMinutes,\n    p: parsePeriod,\n    Q: parseUnixTimestamp,\n    s: parseUnixTimestampSeconds,\n    S: parseSeconds,\n    u: parseWeekdayNumberMonday,\n    U: parseWeekNumberSunday,\n    V: parseWeekNumberISO,\n    w: parseWeekdayNumberSunday,\n    W: parseWeekNumberMonday,\n    x: parseLocaleDate,\n    X: parseLocaleTime,\n    y: parseYear,\n    Y: parseFullYear,\n    Z: parseZone,\n    '%': parseLiteralPercent,\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n        i = -1,\n        j = 0,\n        n = specifier.length,\n        c,\n        pad,\n        format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[(c = specifier.charAt(++i))]) != null)\n            c = specifier.charAt(++i);\n          else pad = c === 'e' ? ' ' : '0';\n          if ((format = formats[c])) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join('');\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n        i = parseSpecifier(d, specifier, (string += ''), 0),\n        week,\n        day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if ('Q' in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if ('p' in d) d.H = (d.H % 12) + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if ('V' in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!('w' in d)) d.w = 1;\n        if ('Z' in d) {\n          (week = utcDate(newYear(d.y))), (day = week.getUTCDay());\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + ((d.w + 6) % 7);\n        } else {\n          (week = newDate(newYear(d.y))), (day = week.getDay());\n          week =\n            day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + ((d.w + 6) % 7);\n        }\n      } else if ('W' in d || 'U' in d) {\n        if (!('w' in d)) d.w = 'u' in d ? d.u % 7 : 'W' in d ? 1 : 0;\n        day =\n          'Z' in d\n            ? utcDate(newYear(d.y)).getUTCDay()\n            : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d =\n          'W' in d\n            ? ((d.w + 6) % 7) + d.W * 7 - ((day + 5) % 7)\n            : d.w + d.U * 7 - ((day + 6) % 7);\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if ('Z' in d) {\n        d.H += (d.Z / 100) | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n      n = specifier.length,\n      m = string.length,\n      c,\n      parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || (j = parse(d, string, j)) < 0) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? ((d.p = periodLookup[n[0].toLowerCase()]), i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n\n      ? ((d.w = shortWeekdayLookup[n[0].toLowerCase()]), i + n[0].length)\n      : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n\n      ? ((d.w = weekdayLookup[n[0].toLowerCase()]), i + n[0].length)\n      : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n\n      ? ((d.m = shortMonthLookup[n[0].toLowerCase()]), i + n[0].length)\n      : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? ((d.m = monthLookup[n[0].toLowerCase()]), i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat((specifier += ''), formats);\n      f.toString = function() {\n        return specifier;\n      };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse((specifier += ''), localDate);\n      p.toString = function() {\n        return specifier;\n      };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat((specifier += ''), utcFormats);\n      f.toString = function() {\n        return specifier;\n      };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() {\n        return specifier;\n      };\n      return p;\n    },\n  };\n}\n\nvar pads = { '-': '', _: ' ', '0': '0' },\n  numberRe = /^\\s*\\d+/, // note: ignores next directive\n  percentRe = /^%/,\n  requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? '-' : '',\n    string = (sign ? -value : value) + '',\n    length = string.length;\n  return (\n    sign +\n    (length < width\n      ? new Array(width - length + 1).join(fill) + string\n      : string)\n  );\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, '\\\\$&');\n}\n\nfunction formatRe(names) {\n  return new RegExp('^(?:' + names.map(requote).join('|') + ')', 'i');\n}\n\nfunction formatLookup(names) {\n  var map = {},\n    i = -1,\n    n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? ((d.w = +n[0]), i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? ((d.u = +n[0]), i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? ((d.U = +n[0]), i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? ((d.V = +n[0]), i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? ((d.W = +n[0]), i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? ((d.y = +n[0]), i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? ((d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000)), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n\n    ? ((d.Z = n[1] ? 0 : -(n[2] + (n[3] || '00'))), i + n[0].length)\n    : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? ((d.m = n[0] - 1), i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? ((d.d = +n[0]), i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? ((d.m = 0), (d.d = +n[0]), i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? ((d.H = +n[0]), i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? ((d.M = +n[0]), i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? ((d.S = +n[0]), i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? ((d.L = +n[0]), i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? ((d.L = Math.floor(n[0] / 1000)), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? ((d.Q = +n[0]), i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? ((d.Q = +n[0] * 1000), i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + '000';\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = day >= 4 || day === 0 ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(\n    timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4),\n    p,\n    2\n  );\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (\n    (z > 0 ? '-' : ((z *= -1), '+')) +\n    pad((z / 60) | 0, '0', 2) +\n    pad(z % 60, '0', 2)\n  );\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + '000';\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = day >= 4 || day === 0 ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(\n    utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4),\n    p,\n    2\n  );\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return '+0000';\n}\n\nfunction formatLiteralPercent() {\n  return '%';\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from './locale';\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: '%x, %X',\n  date: '%-m/%-d/%Y',\n  time: '%-I:%M:%S %p',\n  periods: ['AM', 'PM'],\n  days: [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ],\n  shortDays: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  months: [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ],\n  shortMonths: [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ],\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import { utcFormat } from './defaultLocale';\n\nexport var isoSpecifier = '%Y-%m-%dT%H:%M:%S.%LZ';\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n  ? formatIsoNative\n  : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import { isoSpecifier } from './isoFormat';\nimport { utcParse } from './defaultLocale';\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date('2000-01-01T00:00:00.000Z')\n  ? parseIsoNative\n  : utcParse(isoSpecifier);\n\nexport default parseIso;\n","export {\n  default as timeFormatDefaultLocale,\n  timeFormat,\n  timeParse,\n  utcFormat,\n  utcParse,\n} from './defaultLocale';\nexport { default as timeFormatLocale } from './locale';\nexport { default as isoFormat } from './isoFormat';\nexport { default as isoParse } from './isoParse';\n","import { bisector, tickStep } from 'd3-array';\nimport {\n  timeYear,\n  timeMonth,\n  timeWeek,\n  timeDay,\n  timeHour,\n  timeMinute,\n  timeSecond,\n  timeMillisecond,\n} from 'd3-time';\nimport { timeFormat } from 'd3-time-format';\nimport continuous, { copy, identity } from './continuous';\nimport { initRange } from './init';\nimport nice from './nice';\n\nvar durationSecond = 1000,\n  durationMinute = durationSecond * 60,\n  durationHour = durationMinute * 60,\n  durationDay = durationHour * 24,\n  durationWeek = durationDay * 7,\n  durationMonth = durationDay * 30,\n  durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(\n  year,\n  month,\n  week,\n  day,\n  hour,\n  minute,\n  second,\n  millisecond,\n  format\n) {\n  var scale = continuous(identity, identity),\n    invert = scale.invert,\n    domain = scale.domain;\n\n  var formatMillisecond = format('.%L'),\n    formatSecond = format(':%S'),\n    formatMinute = format('%I:%M'),\n    formatHour = format('%I %p'),\n    formatDay = format('%a %d'),\n    formatWeek = format('%b %d'),\n    formatMonth = format('%B'),\n    formatYear = format('%Y');\n\n  var tickIntervals = [\n    [second, 1, durationSecond],\n    [second, 5, 5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute, 1, durationMinute],\n    [minute, 5, 5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [hour, 1, durationHour],\n    [hour, 3, 3 * durationHour],\n    [hour, 6, 6 * durationHour],\n    [hour, 12, 12 * durationHour],\n    [day, 1, durationDay],\n    [day, 2, 2 * durationDay],\n    [week, 1, durationWeek],\n    [month, 1, durationMonth],\n    [month, 3, 3 * durationMonth],\n    [year, 1, durationYear],\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date\n      ? formatMillisecond\n      : minute(date) < date\n      ? formatSecond\n      : hour(date) < date\n      ? formatMinute\n      : day(date) < date\n      ? formatHour\n      : month(date) < date\n      ? week(date) < date\n        ? formatDay\n        : formatWeek\n      : year(date) < date\n      ? formatMonth\n      : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === 'number') {\n      var target = Math.abs(stop - start) / interval,\n        i = bisector(function(i) {\n          return i[2];\n        }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i =\n          tickIntervals[\n            target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target\n              ? i - 1\n              : i\n          ];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length\n      ? domain(Array.from(_, number))\n      : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n      t0 = d[0],\n      t1 = d[d.length - 1],\n      r = t1 < t0,\n      t;\n    if (r) (t = t0), (t0 = t1), (t1 = t);\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n      ? domain(nice(d, interval))\n      : scale;\n  };\n\n  scale.copy = function() {\n    return copy(\n      scale,\n      calendar(\n        year,\n        month,\n        week,\n        day,\n        hour,\n        minute,\n        second,\n        millisecond,\n        format\n      )\n    );\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return initRange.apply(\n    calendar(\n      timeYear,\n      timeMonth,\n      timeWeek,\n      timeDay,\n      timeHour,\n      timeMinute,\n      timeSecond,\n      timeMillisecond,\n      timeFormat\n    ).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]),\n    arguments\n  );\n}\n","import { calendar } from './time';\nimport { utcFormat } from 'd3-time-format';\nimport {\n  utcYear,\n  utcMonth,\n  utcWeek,\n  utcDay,\n  utcHour,\n  utcMinute,\n  utcSecond,\n  utcMillisecond,\n} from 'd3-time';\nimport { initRange } from './init';\n\nexport default function() {\n  return initRange.apply(\n    calendar(\n      utcYear,\n      utcMonth,\n      utcWeek,\n      utcDay,\n      utcHour,\n      utcMinute,\n      utcSecond,\n      utcMillisecond,\n      utcFormat\n    ).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]),\n    arguments\n  );\n}\n","import { identity } from './continuous';\nimport { initInterpolator } from './init';\nimport { linearish } from './linear';\nimport { loggish } from './log';\nimport { symlogish } from './symlog';\nimport { powish } from './pow';\n\nfunction transformer() {\n  var x0 = 0,\n    x1 = 1,\n    t0,\n    t1,\n    k10,\n    transform,\n    interpolator = identity,\n    clamp = false,\n    unknown;\n\n  function scale(x) {\n    return isNaN((x = +x))\n      ? unknown\n      : interpolator(\n          k10 === 0\n            ? 0.5\n            : ((x = (transform(x) - t0) * k10),\n              clamp ? Math.max(0, Math.min(1, x)) : x)\n        );\n  }\n\n  scale.domain = function(_) {\n    return arguments.length\n      ? (([x0, x1] = _),\n        (t0 = transform((x0 = +x0))),\n        (t1 = transform((x1 = +x1))),\n        (k10 = t0 === t1 ? 0 : 1 / (t1 - t0)),\n        scale)\n      : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? ((clamp = !!_), scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? ((interpolator = _), scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? ((unknown = _), scale) : unknown;\n  };\n\n  return function(t) {\n    (transform = t),\n      (t0 = t(x0)),\n      (t1 = t(x1)),\n      (k10 = t0 === t1 ? 0 : 1 / (t1 - t0));\n    return scale;\n  };\n}\n\nexport function copy(source, target) {\n  return target\n    .domain(source.domain())\n    .interpolator(source.interpolator())\n    .clamp(source.clamp())\n    .unknown(source.unknown());\n}\n\nexport default function sequential() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialLog() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n","import { ascending, bisect } from 'd3-array';\nimport { identity } from './continuous';\nimport { initInterpolator } from './init';\n\nexport default function sequentialQuantile() {\n  var domain = [],\n    interpolator = identity;\n\n  function scale(x) {\n    if (!isNaN((x = +x)))\n      return interpolator((bisect(domain, x) - 1) / (domain.length - 1));\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (let d of _) if (d != null && !isNaN((d = +d))) domain.push(d);\n    domain.sort(ascending);\n    return scale;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? ((interpolator = _), scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequentialQuantile(interpolator).domain(domain);\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n","import { identity } from './continuous';\nimport { initInterpolator } from './init';\nimport { linearish } from './linear';\nimport { loggish } from './log';\nimport { copy } from './sequential';\nimport { symlogish } from './symlog';\nimport { powish } from './pow';\n\nfunction transformer() {\n  var x0 = 0,\n    x1 = 0.5,\n    x2 = 1,\n    t0,\n    t1,\n    t2,\n    k10,\n    k21,\n    interpolator = identity,\n    transform,\n    clamp = false,\n    unknown;\n\n  function scale(x) {\n    return isNaN((x = +x))\n      ? unknown\n      : ((x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21)),\n        interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length\n      ? (([x0, x1, x2] = _),\n        (t0 = transform((x0 = +x0))),\n        (t1 = transform((x1 = +x1))),\n        (t2 = transform((x2 = +x2))),\n        (k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0)),\n        (k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1)),\n        scale)\n      : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? ((clamp = !!_), scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? ((interpolator = _), scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? ((unknown = _), scale) : unknown;\n  };\n\n  return function(t) {\n    (transform = t),\n      (t0 = t(x0)),\n      (t1 = t(x1)),\n      (t2 = t(x2)),\n      (k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0)),\n      (k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1));\n    return scale;\n  };\n}\n\nexport default function diverging() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingLog() {\n  var scale = loggish(transformer()).domain([0.1, 1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}\n","export { default as scaleBand, point as scalePoint } from './band';\n\nexport { default as scaleIdentity } from './identity';\n\nexport { default as scaleLinear } from './linear';\n\nexport { default as scaleLog } from './log';\n\nexport { default as scaleSymlog } from './symlog';\n\nexport { default as scaleOrdinal, implicit as scaleImplicit } from './ordinal';\n\nexport { default as scalePow, sqrt as scaleSqrt } from './pow';\n\nexport { default as scaleQuantile } from './quantile';\n\nexport { default as scaleQuantize } from './quantize';\n\nexport { default as scaleThreshold } from './threshold';\n\nexport { default as scaleTime } from './time';\n\nexport { default as scaleUtc } from './utcTime';\n\nexport {\n  default as scaleSequential,\n  sequentialLog as scaleSequentialLog,\n  sequentialPow as scaleSequentialPow,\n  sequentialSqrt as scaleSequentialSqrt,\n  sequentialSymlog as scaleSequentialSymlog,\n} from './sequential';\n\nexport { default as scaleSequentialQuantile } from './sequentialQuantile';\n\nexport {\n  default as scaleDiverging,\n  divergingLog as scaleDivergingLog,\n  divergingPow as scaleDivergingPow,\n  divergingSqrt as scaleDivergingSqrt,\n  divergingSymlog as scaleDivergingSymlog,\n} from './diverging';\n\nexport { default as tickFormat } from './tickFormat';\n","import { scaleLinear } from 'd3-scale';\nimport { GaussianBlur } from './gaussian-blur';\nimport { Vec2 } from './types';\n\nconst { abs, floor, max, min, random } = Math;\n\nexport interface IPerlinOptions {\n  /** Output width */\n  width: number;\n  /** Output height */\n  height: number;\n  /** The amount of blurring to apply to the combined octaves */\n  blendPasses: number;\n  /**\n   * An octave is the start of perlin noise with a gaussian noise map. Each octave should be smaller\n   * than the end result. The octave is then scaled up then averaged with the\n   * other octaves. Octaves closer to the output size creates greater detail in regions, while\n   * octaves that are smaller creates larger features.\n   *\n   * Octaves are in the format [width, height]\n   */\n  octaves: Vec2[];\n  /**\n   * This sets the values that should appear within the perlin dataset.\n   */\n  valueRange: Vec2;\n}\n\n/**\n * This generates a 2d plane of perlin noise that is gray scale with values\n * that are 0 - 1.\n */\nexport class PerlinNoise {\n  /** The blurring kernal used to blur the data */\n  private blur: GaussianBlur;\n  /** The perlin data with values 0 - 1 */\n  data: number[][];\n  /** Used for debug rendering the output */\n  private debugContext: HTMLCanvasElement;\n  /** The options used to construct the data */\n  options: IPerlinOptions;\n\n  get width() {\n    return this.options.width;\n  }\n\n  get height() {\n    return this.options.height;\n  }\n\n  /**\n   * Provide the output size, and the size of the octaves generated.\n   */\n  constructor(options: IPerlinOptions) {\n    this.options = options;\n    this.blur = new GaussianBlur({\n      passes: options.blendPasses,\n      kernalSize: 9,\n    });\n\n    this.update(options);\n  }\n\n  /**\n   * Generates a new perlin dataset\n   */\n  async generate() {\n    const { width, height, octaves, valueRange } = this.options;\n    // This will contain the end perlin result\n    let perlin: number[][] = [];\n\n    // Loop through each octave and multiply it into the perlin output\n    octaves.forEach(octave => {\n      // Start with a smaller sized map of pure gray scale noise\n      const small: number[][] = [];\n      const smallWidth = octave[0];\n      const smallHeight = octave[1];\n      const scaleX = scaleLinear()\n        .domain([0, width])\n        .range([0, smallWidth]);\n      const scaleY = scaleLinear()\n        .domain([0, height])\n        .range([0, smallHeight]);\n\n      // Make the octave base\n      for (let x = 0; x < smallWidth; ++x) {\n        const col: number[] = [];\n        small.push(col);\n\n        for (let y = 0; y < smallHeight; ++y) {\n          col.push(random());\n        }\n      }\n\n      // Sample the octave into the size of the output perlin image\n      for (let x = 0; x < width; ++x) {\n        const col = (perlin[x] = perlin[x] || []);\n\n        for (let y = 0; y < height; ++y) {\n          col[y] = (col[y] || 1) * small[floor(scaleX(x))][floor(scaleY(y))];\n        }\n      }\n    });\n\n    // Run through the perlin noise data with our blur filter\n    perlin = this.blur.generate(perlin);\n\n    // We now normalize the ranges to keep details brighter\n    // We also make the data within each cell reflect the data range\n    // that is specified\n    let maxVal = -1;\n    const range = valueRange[1] - valueRange[0];\n    const base = valueRange[0];\n\n    for (let x = 0; x < width; ++x) {\n      const col = perlin[x];\n\n      for (let y = 0; y < height; ++y) {\n        // First brigten up darkened areas\n        // perlin[x][y] *= 1 / (perlin[x][y] + 1);\n        // Now get the max value\n        maxVal = max(col[y], maxVal);\n      }\n    }\n\n    for (let x = 0; x < width; ++x) {\n      const col = perlin[x];\n\n      for (let y = 0; y < height; ++y) {\n        col[y] /= maxVal;\n        col[y] = col[y] * range + base;\n      }\n    }\n\n    this.data = perlin;\n  }\n\n  /**\n   * Will just ensure the data object is populated with a generation.\n   */\n  async generateOnce() {\n    if (!this.data) {\n      await this.generate();\n    }\n  }\n\n  /**\n   * Retrieves a rectangular sample from the perlin data.\n   * If a threshold is included, absolute values below it will be zero'ed out.\n   */\n  sample(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    threshold?: number\n  ) {\n    const out: number[][] = [];\n\n    if (threshold) {\n      for (let i = x, end = min(this.data.length, x + width); i < end; ++i) {\n        out.push(\n          this.data[i]\n            .slice(y, y + height)\n            .map(value => (abs(value) > threshold ? value : 0))\n        );\n      }\n    } else {\n      for (let i = x, end = min(this.data.length, x + width); i < end; ++i) {\n        out.push(this.data[i].slice(y, y + height));\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Update the options for the noise generation.\n   */\n  update(options: Partial<IPerlinOptions>) {\n    Object.assign(this.options, options);\n\n    if (options.blendPasses) {\n      this.blur.update({\n        passes: options.blendPasses,\n      });\n    }\n  }\n\n  /**\n   * Renders a canvas on the screen showing the generated output.\n   */\n  debug(threshold: number = 0, clear?: boolean) {\n    if (clear) {\n      if (this.debugContext) {\n        this.debugContext.remove();\n      }\n      return;\n    }\n\n    const canvas = document.createElement('canvas').getContext('2d');\n\n    if (canvas) {\n      const { valueRange } = this.options;\n      const element = canvas.canvas;\n      document.getElementsByTagName('body')[0].appendChild(canvas.canvas);\n      const width = (element.width = this.data.length);\n      const height = (element.height = this.data[0].length);\n      const data = canvas.getImageData(0, 0, width, height);\n      let index = 0;\n      const range = valueRange[1] - valueRange[0];\n      const base = valueRange[0];\n\n      if (threshold) {\n        for (let x = 0, end = this.data.length; x < end; ++x) {\n          const col = this.data[x];\n\n          for (let y = 0, endy = col.length; y < endy; ++y) {\n            const val = 255 * (abs(col[y]) > threshold ? 1 : 0);\n            data.data[index * 4] = val;\n            data.data[index * 4 + 1] = val;\n            data.data[index * 4 + 2] = val;\n            data.data[index * 4 + 3] = 255;\n            index++;\n          }\n        }\n      } else {\n        for (let x = 0, end = this.data.length; x < end; ++x) {\n          const col = this.data[x];\n\n          for (let y = 0, endy = col.length; y < endy; ++y) {\n            const val = 255 * ((col[y] - base) / range);\n            data.data[index * 4] = val;\n            data.data[index * 4 + 1] = val;\n            data.data[index * 4 + 2] = val;\n            data.data[index * 4 + 3] = 255;\n            index++;\n          }\n        }\n      }\n\n      canvas.putImageData(data, 0, 0);\n      element.style.position = 'fixed';\n      element.style.top = '0px';\n      element.style.left = '0px';\n      element.style.zIndex = '9999';\n\n      this.debugContext = element;\n    }\n  }\n}\n","export * from './FIR';\nexport * from './gaussian-blur';\nexport * from './pascal-triangle';\nexport * from './perlin-noise';\nexport * from './types';\n"]}